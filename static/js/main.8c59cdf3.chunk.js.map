{"version":3,"sources":["components/Session/context.js","components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/index.js","components/Session/withAuthentication.js","constants/routes.js","components/Session/withAuthorization.js","components/Home/Home.js","components/About/About.js","components/Contact/Contact.js","components/SignUp/SignUp.js","components/PasswordForget/index.js","components/SignIn/SignIn.js","components/Error/Error.js","components/SignOut/index.js","components/Navigation/Navigation.js","components/PasswordChange/index.js","components/Account/index.js","components/Admin/Admin.js","App.js","serviceWorker.js","index.js"],"names":["AuthUserContext","React","createContext","FirebaseContext","withFirebase","Component","props","react_default","a","createElement","Consumer","firebase","Object","assign","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","components_Firebase","Firebase","_this","this","classCallCheck","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","user","uid","db","ref","concat","users","app","initializeApp","database","withAuthentication","WithAuthentication","_React$Component","possibleConstructorReturn","getPrototypeOf","call","state","authUser","inherits","createClass","key","value","_this2","onAuthStateChanged","setState","listener","context","Provider","HOME","SIGN_IN","ABOUT","CONTACT","withAuthorization","condition","WithAuthorization","apply","arguments","history","push","ROUTES","compose","withRouter","className","About","Contact","INITIAL_STATE","username","passwordOne","passwordTwo","error","SignUpFormBase","onSubmit","event","_this$state","then","set","objectSpread","catch","preventDefault","onChange","defineProperty","target","name","_this$state2","isInvalid","type","placeholder","disabled","message","SignUpLink","Link","to","SignUpForm","SignUpPage","PasswordForgetFormBase","PasswordForgetLink","PasswordForgetPage","PasswordForgetForm","SignInFormBase","SignInForm","SignIn","PasswordForget_PasswordForgetLink","SignUp_SignUpLink","Error","_ref","onClick","href","NavigationAuth","NavLink","SignOut","NavigationNonAuth","Navigation","Navigation_NavigationAuth","Navigation_NavigationNonAuth","PasswordChangeForm","PasswordChange","AdminPage","loading","on","snapshot","usersObject","val","usersList","keys","map","off","Admin_UserList","UserList","components_Navigation_Navigation","Switch","Route","path","component","Home","exact","SignInPage","AccountPage","Boolean","window","location","hostname","match","ReactDOM","render","Firebase_context","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8c59cdf3.chunk.js","sourcesContent":["import React from 'react';\n\nconst AuthUserContext = React.createContext(null);\n\nexport default AuthUserContext;","import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport const withFirebase = Component => props => (\n  <FirebaseContext.Consumer>\n    {firebase => <Component {...props} firebase={firebase} />}\n  </FirebaseContext.Consumer>\n);\n\nexport default FirebaseContext;","import app from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\n\nconst config = {\n  apiKey: \"AIzaSyCcNXC25DjJcI9l7iKvIK0183VAWNxu9Ag\",\n  authDomain: \"kovepages.firebaseapp.com\",\n  databaseURL: \"https://kovepages.firebaseio.com\",\n  projectId: \"kovepages\",\n  storageBucket: \"kovepages.appspot.com\",\n  messagingSenderId: \"559337801228\"\n};\n\nclass Firebase {\n  constructor() {\n    app.initializeApp(config);\n\n    this.auth = app.auth();\n    this.db = app.database();\n  }\n\n  // *** Auth Api ***\n\n  doCreateUserWithEmailAndPassword = (email, password) => this.auth.createUserWithEmailAndPassword(email, password);\n  \n  doSignInWithEmailAndPassword = (email, password) => this.auth.signInWithEmailAndPassword(email, password);\n  \n  doSignOut = () => this.auth.signOut();\n\n  doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\n\n  doPasswordUpdate = password => this.auth.currentUser.updatePassword(password);\n\n  // *** User API ***\n\n  user = uid => this.db.ref(`users/${uid}`);\n\n  users = () => this.db.ref('users');\n\n}\n\nexport default Firebase;","import FirebaseContext, { withFirebase } from './context';\nimport Firebase from './firebase';\n\nexport default Firebase;\n\nexport { FirebaseContext, withFirebase };","import React from 'react';\n\nimport { withFirebase } from '../Firebase';\nimport { AuthUserContext } from '../Session';\n\nconst withAuthentication = Component => {\n  class WithAuthentication extends React.Component {\n    constructor(props) {\n      super(props);\n  \n      this.state = {\n        authUser: null,\n      }\n    }\n\n    componentDidMount(){\n      this.props.firebase.auth.onAuthStateChanged(authUser => {\n        authUser\n          ? this.setState({ authUser })\n          : this.setState({ authUser: null });\n      });\n    }\n  \n    componentWillUnmount() {\n      this.listener();\n    }\n  \n    render(){\n      return (\n        <AuthUserContext.Provider value={this.state.authUser}>\n          <Component {...this.props} />\n        </AuthUserContext.Provider>\n      );\n    }\n  }\n\n  return withFirebase(WithAuthentication);\n}\n\nexport default withAuthentication;","export const LANDING = '/kovedev/';\nexport const HOME = '/kovedev/';\nexport const SIGN_IN = '/kovedev/signin/';\nexport const SIGN_UP = '/kovedev/signup/';\nexport const ABOUT = '/kovedev/about/';\nexport const CONTACT = '/kovedev/contact/';\nexport const ACCOUNT = '/kovedev/account/';\nexport const PASSWORD_FORGET = '/kovedev/pw-forgot/';\nexport const ADMIN = '/kovedev/admin/';","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst withAuthorization = condition => Component => {\n  class WithAuthorization extends React.Component {\n\n    componentDidMount(){\n      this.listener = this.props.firebase.auth.onAuthStateChanged(\n        authUser => {\n          if (!condition(authUser)){\n            this.props.history.push(ROUTES.SIGN_IN);\n          }\n        }\n      );\n    }\n\n    componentWillUnmount(){\n      this.listener();\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Consumer>\n          { authUser => \n            condition(authUser) ? <Component {...this.props} /> : null \n          }\n        </AuthUserContext.Consumer>\n      );\n    }\n  }\n\n  return compose(\n    withRouter,\n    withFirebase\n  )(WithAuthorization);\n};\n\nexport default withAuthorization;","import React from 'react';\n\nimport { withAuthorization } from '../Session';\n\nconst Home = () => {\n\treturn(\n\t\t<div className=\"App\">\n\t\t\t<div className=\"PageName\">\n\t\t\t\tHome\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\tYou are logged in\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(Home);","import React from 'react';\n\nconst About = () => {\n\treturn(\n\t\t<div className=\"App\">\n\t\t\tAbout\n\t\t</div>\n\t);\n}\n\nexport default About;","import React from 'react';\n\nconst Contact = () => {\n\treturn(\n\t\t<div className=\"App\">\n\t\t\tContact\n\t\t</div>\n\t);\n}\n\nexport default Contact;","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst SignUpPage = () => (\n  <div className=\"App\">\n    <div className=\"PageName\">\n\t\t\tSign Up\n\t\t</div>\n\t\t\t<SignUpForm />\n  </div>\n);\n\nconst INITIAL_STATE = {\n  username: '',\n  email: '',\n  passwordOne: '',\n  passwordTwo: '',\n  error: null,\n};\n\nclass SignUpFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  };\n\n  onSubmit = event => {\n\t\t// eslint-disable-next-line\n\t\tconst { username, email, passwordOne } = this.state;\n\n    this.props.firebase\n      .doCreateUserWithEmailAndPassword(email, passwordOne)\n      .then(authUser => {\n        // Create a user in your Firebase realtime database\n        return this.props.firebase\n          .user(authUser.user.uid)\n          .set({\n            username,\n            email,\n          });\n\t\t\t})\n\t\t\t.then(() => {\n        this.setState({ ...INITIAL_STATE });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n\t\tevent.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({[event.target.name]: event.target.value});\n  };\n\n  render() {\n    const {\n      username,\n      email,\n      passwordOne,\n      passwordTwo,\n      error,\n    } = this.state;\n\n    const isInvalid = \n      passwordOne !== passwordTwo || \n      passwordOne === '' ||\n      email === '' ||\n      username === '';\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"username\"\n          value={username}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Full Name\"\n        />\n        <input\n          name=\"email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Email Address\"\n        />\n        <input\n          name=\"passwordOne\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Password\"\n        />\n        <input\n          name=\"passwordTwo\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Confirm Password\"\n        />\n        <button disabled={isInvalid} type=\"submit\">Sign Up</button>\n        {error && <div>{error.message}</div>}\n      </form>\n    );\n  }\n}\nconst SignUpLink = () => (\n  <div className=\"SignUpLink\">\n      Don't gave an account? <Link to={ROUTES.SIGN_UP}>Sign Up</Link>\n  </div>\n);\n\nconst SignUpForm = compose(\n  withRouter,\n  withFirebase,\n)(SignUpFormBase);\n\nexport default SignUpPage;\n\nexport { SignUpForm, SignUpLink };","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst PasswordForgetPage = () => (\n  <div className=\"App\">\n    <div className=\"PageName\">\n\t\t\tPasswordforgot page\n\t\t</div>\n    <PasswordForgetForm />\n  </div>\n);\n\nconst INITIAL_STATE = {\n  email: '',\n  error: null,\n};\n\nclass PasswordForgetFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { email } = this.state;\n\n    this.props.firebase\n      .doPasswordReset(email)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { email, error } = this.state;\n\n    const isInvalid = email === '';\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"email\"\n          value={this.state.email}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Email Address\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Reset My Password\n        </button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nconst PasswordForgetLink = () => (\n  <div className=\"SignUpLink\">\n    <Link to={ROUTES.PASSWORD_FORGET}>Forgot Password?</Link>\n  </div>\n);\n\nexport default PasswordForgetPage;\n\nconst PasswordForgetForm = withFirebase(PasswordForgetFormBase);\n\nexport { PasswordForgetForm, PasswordForgetLink };","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport { SignUpLink } from '../SignUp/SignUp';\nimport { PasswordForgetLink } from '../PasswordForget'; \nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst SignInPage = () => (\n\t<div className=\"App\">\n\t\t<div className=\"PageName\">\n\t\t\tSign in Page\n\t\t</div>\n    <SignInForm />\n\t\t<PasswordForgetLink />\n    <SignUpLink />\n  </div>\n);\n\nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n  error: null,\n};\n\nclass SignInFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { email, password } = this.state;\n    this.props.firebase\n\t\t.doSignInWithEmailAndPassword(email, password)\n\t\t.then(() => {\n        this.setState({ ...INITIAL_STATE });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { email, password, error } = this.state;\n\n    const isInvalid = password === '' || email === '';\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Email Address\"\n        />\n        <input\n          name=\"password\"\n          value={password}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Password\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Sign In\n        </button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nconst SignInForm = compose(\n  withRouter,\n  withFirebase,\n)(SignInFormBase);\n\nexport default SignInPage;\n\nexport { SignInForm };","import React from 'react';\n\nconst Error = () => {\n\treturn(\n\t\t<div className=\"App\">\n\t\t\t404 page not found\n\t\t</div>\n\t);\n}\n\nexport default Error;","import React from 'react';\n\nimport { withFirebase } from '../Firebase';\n\nconst SignOutButton = ({ firebase }) => (\n  <div onClick={firebase.doSignOut}>\n    {// eslint-disable-next-line\n    <a href=\"#\">Sign out</a>\n    }\n  </div>\n);\n\nexport default withFirebase(SignOutButton);","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport SignOutButton from '../SignOut';\nimport * as ROUTES from '../../constants/routes';\nimport { AuthUserContext } from '../Session';\n\nconst Navigation = () => (\n  <div>\n    <AuthUserContext.Consumer>\n      { authUser =>\n          authUser ? <NavigationAuth /> : <NavigationNonAuth />\n      }\n    </AuthUserContext.Consumer>\n  </div>\n);\n\nconst NavigationAuth = () => (\n  <div className=\"NavBar\">\n    <NavLink to={ROUTES.HOME}>Home</NavLink>\n    <NavLink to={ROUTES.ABOUT}>About</NavLink>\n    <NavLink to={ROUTES.CONTACT}>Contact</NavLink>\n    <NavLink to={ROUTES.ACCOUNT}>Account</NavLink>\n    <NavLink to={ROUTES.ADMIN}>Admin</NavLink>\n    <SignOutButton />\n  </div>\n);\n\nconst NavigationNonAuth = () => (\n  <div className=\"NavBar\">\n    <NavLink to={ROUTES.HOME}>Home</NavLink>\n    <NavLink to={ROUTES.ABOUT}>About</NavLink>\n    <NavLink to={ROUTES.CONTACT}>Contact</NavLink>\n    <NavLink to={ROUTES.SIGN_IN}>Sign in</NavLink>\n    {/* <NavLink to={ROUTES.ADMIN}>Admin</NavLink> */}\n  </div>\n);\n\nexport default Navigation;","import React, { Component } from 'react';\n\nimport { withFirebase } from '../Firebase';\n\nconst INITIAL_STATE = {\n  passwordOne: '',\n  passwordTwo: '',\n  error: null,\n};\n\nclass PasswordChangeForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { passwordOne } = this.state;\n\n    this.props.firebase\n      .doPasswordUpdate(passwordOne)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { passwordOne, passwordTwo, error } = this.state;\n\n    const isInvalid =\n      passwordOne !== passwordTwo || passwordOne === '';\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"passwordOne\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"New Password\"\n        />\n        <input\n          name=\"passwordTwo\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Confirm New Password\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Reset My Password\n        </button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default withFirebase(PasswordChangeForm);","import React from 'react';\n\nimport { AuthUserContext, withAuthorization } from '../Session';\nimport { PasswordForgetForm } from '../PasswordForget';\nimport PasswordChangeForm from '../PasswordChange';\n\nconst AccountPage = () => (\n  <AuthUserContext.Consumer>\n\t\t{authUser => (\n\t\t\t<div className=\"App\">\n\t\t\t\t<div className=\"PageName\">Account: {/* authUser.email */}</div>\n\t\t\t\t<PasswordForgetForm />\n\t\t\t\t<PasswordChangeForm />\n\t\t\t</div>\n\t\t)}\n  </AuthUserContext.Consumer>\n);\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(AccountPage);","import React, { Component } from 'react';\n\n// import * as ROLES from '../../constants/roles';\n// import { withAuthorization } from '../Session';\nimport { withFirebase } from '../Firebase';\n\nclass AdminPage extends Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      loading: false,\n      users: []\n    };\n  }\n\n  componentDidMount(){\n    this.setState({ loading: true });\n\n    this.props.firebase.users().on('value', snapshot => {\n      const usersObject = snapshot.val();\n\n      const usersList = Object.keys(usersObject).map(key=>({\n        ...usersObject[key],\n        uid: key\n      }))\n\n      this.setState({\n        users: usersList,\n        loading: false,\n      });\n    });\n  }\n\n  componentWillUnmount(){\n    this.props.firebase.users().off();\n  }\n\n\trender(){\n    const { users, loading } = this.state;\n\n    return(\n      <div className=\"App\">\n        <div className=\"PageName\">Admin Page</div>\n        <div className=\"UserList\">\n          <div className=\"Registers\">Registered users: </div>\n          {loading && <ul>Loading ...</ul>}\n          <UserList users={users} />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst UserList = ({ users }) => (\n  <ul>\n    {users.map(user => (\n      <li key={user.uid}>\n        {user.username}\n      </li>\n    ))}\n  </ul>\n);\n\n// const condition = authUser =>\n//  authUser;// && authUser.roles.includes(ROLES.ADMIN);\n\nexport default withFirebase(AdminPage); // withAuthorization(condition)(AdminPage);","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport './App.scss';\n\nimport Home from './components/Home/Home';\nimport About from './components/About/About';\nimport Contact from './components/Contact/Contact';\nimport SignInPage from './components/SignIn/SignIn';\nimport Error from './components/Error/Error';\nimport Navigation from './components/Navigation/Navigation';\nimport SignUpPage from './components/SignUp/SignUp';\nimport PasswordForgetPage from './components/PasswordForget';\nimport AccountPage from './components/Account';\nimport AdminPage from './components/Admin/Admin';\n\nimport * as ROUTES from './constants/routes';\nimport { withAuthentication } from './components/Session';\n\nconst App = () => (\n\t<div>\n\t\t<Navigation />\n\t\t<Switch>\n\t\t\t<Route path={ROUTES.HOME} component={Home} exact/>\n\t\t\t<Route path={ROUTES.ABOUT} component={About} />\n\t\t\t<Route path={ROUTES.CONTACT} component={Contact} />\n\t\t\t<Route path={ROUTES.SIGN_IN} component={SignInPage} />\n\t\t\t<Route path={ROUTES.SIGN_UP} component={SignUpPage} />\n\t\t\t<Route path={ROUTES.PASSWORD_FORGET} component={PasswordForgetPage} />\n\t\t\t<Route path={ROUTES.ACCOUNT} component={AccountPage} />\n\t\t\t<Route path={ROUTES.ADMIN} component={AdminPage} />\n\t\t\t<Route component={Error}/>\n\t\t</Switch>\n\t</div>\n);\n\nexport default withAuthentication(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport Firebase, { FirebaseContext } from './components/Firebase';\n\nReactDOM.render(\n  <FirebaseContext.Provider value={new Firebase()}>\n    <BrowserRouter>\n      <App/>\n    </BrowserRouter>\n  </FirebaseContext.Provider>\n  , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}