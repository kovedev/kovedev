{"version":3,"sources":["components/Home/Home.js","components/About/About.js","components/Contact/Contact.js","components/SignIn/SignIn.js","components/Error/Error.js","constants/routes.js","components/Navigation/Navigation.js","components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/index.js","components/SignUp/SignUp.js","components/PasswordForget/PasswordForgot.js","components/Account/Account.js","components/Admin/Admin.js","App.js","serviceWorker.js","index.js"],"names":["Home","react_default","a","createElement","className","About","Contact","SignInPage","Error","HOME","Navigation","NavLink","to","ROUTES","FirebaseContext","React","createContext","require","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","components_Firebase","Firebase","_this","this","Object","classCallCheck","doCreateUserWithEmailAndPassword","email","password","auth","createUserAndRetrieveDataWithEmailAndPassword","doSignInUserWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","app","initializeApp","INITIAL_STATE","username","passwordOne","passwordTwo","error","SignUpFormBase","props","possibleConstructorReturn","getPrototypeOf","call","onSubmit","event","_this$state","state","firebase","then","authUser","setState","objectSpread","history","push","catch","preventDefault","onChange","defineProperty","target","name","value","_this$state2","isInvalid","type","placeholder","disabled","message","Component","SignUpForm","compose","withRouter","Consumer","assign","SignUpPage","PasswordForgotPage","AccountPage","AdminPage","App","components_Navigation_Navigation","Switch","Route","path","component","exact","PasswordForgetPage","Boolean","window","location","hostname","match","ReactDOM","render","context","Provider","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"iRAUeA,SARF,WACZ,OACCC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAf,UCMaC,EARD,WACb,OACCJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAf,UCMaE,EARC,WACf,OACCL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAf,YCYaG,EAdI,WAClB,OACCN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAf,gBAGAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACdH,EAAAC,EAAAC,cAAA,wBAAeF,EAAAC,EAAAC,cAAA,eACfF,EAAAC,EAAAC,cAAA,wBAAeF,EAAAC,EAAAC,cAAA,kBCAJK,EARD,WACb,OACCP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAf,+BCHWK,EAAO,YCgBLC,EAZI,WAClB,OACGT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAASC,GAAIC,GAAb,QACAZ,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAASC,GDLM,mBCKf,SACAX,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAASC,GDLQ,qBCKjB,WACAX,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAASC,GDTQ,oBCSjB,WACAX,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAASC,GDJM,mBCIf,mDCVAE,EAAkBC,IAAMC,cAAc,MAQ7BF,2BCRfG,EAAQ,IAAUC,SAElB,IAAMA,EAAS,CACbC,OAAQ,0CACRC,WAAY,4BACZC,YAAa,mCACbC,UAAW,YACXC,cAAe,wBACfC,kBAAmB,gBCPrBC,EDWE,SAAAC,IAAc,IAAAC,EAAAC,KAAAC,OAAAC,EAAA,EAAAD,CAAAD,KAAAF,GAAAE,KAQdG,iCAAmC,SAACC,EAAOC,GAAR,OAAqBN,EAAKO,KAAKC,8CAA8CH,EAAOC,IARzGL,KAUdQ,iCAAmC,SAACJ,EAAOC,GAAR,OAAqBN,EAAKO,KAAKG,2BAA2BL,EAAOC,IAVtFL,KAYdU,UAAY,kBAAMX,EAAKO,KAAKK,WAZdX,KAcdY,gBAAkB,SAAAR,GAAK,OAAIL,EAAKO,KAAKO,uBAAuBT,IAd9CJ,KAgBdc,iBAAmB,SAAAT,GAAQ,OAAIN,EAAKO,KAAKS,YAAYC,eAAeX,IAflEY,IAAIC,cAAc5B,GAElBU,KAAKM,KAAOW,IAAIX,QEDda,EAAgB,CACpBC,SAAU,GACVhB,MAAO,GACPiB,YAAa,GACbC,YAAa,GACbC,MAAO,MAGHC,cACJ,SAAAA,EAAYC,GAAO,IAAA1B,EAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAD,KAAAwB,IACjBzB,EAAAE,OAAAyB,EAAA,EAAAzB,CAAAD,KAAAC,OAAA0B,EAAA,EAAA1B,CAAAuB,GAAAI,KAAA5B,KAAMyB,KAKRI,SAAW,SAAAC,GAAS,IAAAC,EAEqBhC,EAAKiC,MAA5B5B,GAFE2B,EAEZX,SAFYW,EAEF3B,OAAOiB,EAFLU,EAEKV,YAEvBtB,EAAK0B,MAAMQ,SACR9B,iCAAiCC,EAAOiB,GACxCa,KAAK,SAAAC,GACJpC,EAAKqC,SAALnC,OAAAoC,EAAA,EAAApC,CAAA,GAAmBkB,IACnBpB,EAAK0B,MAAMa,QAAQC,KAAKtD,KAEzBuD,MAAM,SAAAjB,GACLxB,EAAKqC,SAAS,CAAEb,YAGtBO,EAAMW,kBApBa1C,EAuBnB2C,SAAW,SAAAZ,GACT/B,EAAKqC,SAALnC,OAAA0C,EAAA,EAAA1C,CAAA,GAAgB6B,EAAMc,OAAOC,KAAOf,EAAMc,OAAOE,SArBjD/C,EAAKiC,MAAL/B,OAAAoC,EAAA,EAAApC,CAAA,GAAkBkB,GAHDpB,wEA2BV,IAAAgD,EAOH/C,KAAKgC,MALPZ,EAFK2B,EAEL3B,SACAhB,EAHK2C,EAGL3C,MACAiB,EAJK0B,EAIL1B,YACAC,EALKyB,EAKLzB,YACAC,EANKwB,EAMLxB,MAGIyB,EACJ3B,IAAgBC,GACA,KAAhBD,GACU,KAAVjB,GACa,KAAbgB,EAEF,OACE/C,EAAAC,EAAAC,cAAA,QAAMsD,SAAU7B,KAAK6B,UACnBxD,EAAAC,EAAAC,cAAA,SACEsE,KAAK,WACLC,MAAO1B,EACPsB,SAAU1C,KAAK0C,SACfO,KAAK,OACLC,YAAY,cAEd7E,EAAAC,EAAAC,cAAA,SACEsE,KAAK,QACLC,MAAO1C,EACPsC,SAAU1C,KAAK0C,SACfO,KAAK,OACLC,YAAY,kBAEd7E,EAAAC,EAAAC,cAAA,SACEsE,KAAK,cACLC,MAAOzB,EACPqB,SAAU1C,KAAK0C,SACfO,KAAK,WACLC,YAAY,aAEd7E,EAAAC,EAAAC,cAAA,SACEsE,KAAK,cACLC,MAAOxB,EACPoB,SAAU1C,KAAK0C,SACfO,KAAK,WACLC,YAAY,qBAEd7E,EAAAC,EAAAC,cAAA,UAAQ4E,SAAUH,EAAWC,KAAK,UAAlC,WACC1B,GAASlD,EAAAC,EAAAC,cAAA,WAAMgD,EAAM6B,iBA1EDC,aAqFvBC,EAAaC,YACjBC,IH1G0B,SAAAH,GAAS,OAAI,SAAA5B,GAAK,OAC5CpD,EAAAC,EAAAC,cAACW,EAAgBuE,SAAjB,KACG,SAAAxB,GAAQ,OAAI5D,EAAAC,EAAAC,cAAC8E,EAADpD,OAAAyD,OAAA,GAAejC,EAAf,CAAsBQ,SAAUA,SGuG9BsB,CAGjB/B,GAEamC,EA3GI,kBACjBtF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAf,WAGDH,EAAAC,EAAAC,cAAC+E,EAAD,QCFYM,EARY,WAC1B,OACCvF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAf,yBCMaqF,EARK,WACnB,OACCxF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAf,iBCMasF,EARG,WACjB,OACCzF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAf,eCkCauF,mLAnBb,OACC1F,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAACyF,EAAD,MACA3F,EAAAC,EAAAC,cAAC0F,EAAA,EAAD,KACC5F,EAAAC,EAAAC,cAAC2F,EAAA,EAAD,CAAOC,KAAMlF,EAAamF,UAAWhG,EAAMiG,OAAK,IAChDhG,EAAAC,EAAAC,cAAC2F,EAAA,EAAD,CAAOC,KTpBS,kBSoBWC,UAAW3F,IACtCJ,EAAAC,EAAAC,cAAC2F,EAAA,EAAD,CAAOC,KTpBW,oBSoBWC,UAAW1F,IACxCL,EAAAC,EAAAC,cAAC2F,EAAA,EAAD,CAAOC,KTxBW,mBSwBWC,UAAWzF,IACxCN,EAAAC,EAAAC,cAAC2F,EAAA,EAAD,CAAOC,KTxBW,mBSwBWC,UAAWT,IACxCtF,EAAAC,EAAAC,cAAC2F,EAAA,EAAD,CAAOC,KTrBmB,sBSqBWC,UAAWE,IAChDjG,EAAAC,EAAAC,cAAC2F,EAAA,EAAD,CAAOC,KTvBW,oBSuBWC,UAAWP,IACxCxF,EAAAC,EAAAC,cAAC2F,EAAA,EAAD,CAAOC,KTtBS,kBSsBWC,UAAWN,IACtCzF,EAAAC,EAAAC,cAAC2F,EAAA,EAAD,CAAOE,UAAWxF,aAdLyE,aCLEkB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,uECVNC,IAASC,OACPxG,EAAAC,EAAAC,cAACuG,EAAgBC,SAAjB,CAA0BjC,MAAO,IAAIhD,GACnCzB,EAAAC,EAAAC,cAACyG,EAAA,EAAD,KACE3G,EAAAC,EAAAC,cAAC0G,EAAD,QAGFC,SAASC,eAAe,SDmHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMpD,KAAK,SAAAqD,GACjCA,EAAaC","file":"static/js/main.45d92d4b.chunk.js","sourcesContent":["import React from 'react';\n\nconst Home = () => {\n\treturn(\n\t\t<div className=\"App\">\n\t\t\tHome\n\t\t</div>\n\t);\n}\n\nexport default Home;","import React from 'react';\n\nconst About = () => {\n\treturn(\n\t\t<div className=\"App\">\n\t\t\tAbout\n\t\t</div>\n\t);\n}\n\nexport default About;","import React from 'react';\n\nconst Contact = () => {\n\treturn(\n\t\t<div className=\"App\">\n\t\t\tContact\n\t\t</div>\n\t);\n}\n\nexport default Contact;","import React from 'react';\n\nconst SignInPage = () => {\n\treturn(\n\t\t<div className=\"App\">\n\t\t\t<div className=\"PageName\">\n\t\t\t\tSign in Page\n\t\t\t</div>\n\t\t\t<div className=\"UserPass\">\n\t\t\t\t<div>Username: <input/></div>\n\t\t\t\t<div>Password: <input/></div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default SignInPage;","import React from 'react';\n\nconst Error = () => {\n\treturn(\n\t\t<div className=\"App\">\n\t\t\t404 page not found\n\t\t</div>\n\t);\n}\n\nexport default Error;","export const LANDING = '/kovedev/';\nexport const HOME = '/kovedev/';\nexport const SIGN_IN = '/kovedev/signin/';\nexport const SIGN_UP = '/kovedev/signup/';\nexport const ABOUT = '/kovedev/about/';\nexport const CONTACT = '/kovedev/contact/';\nexport const ACCOUNT = '/kovedev/account/';\nexport const PASSWORD_FORGET = '/kovedev/pw-forgot/';\nexport const ADMIN = '/kovedev/admin/';","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport * as ROUTES from '../../constants/routes';\n\nconst Navigation = () => {\n\treturn( \n    <div className=\"NavBar\">\n      <NavLink to={ROUTES.HOME}>Home</NavLink>\n      <NavLink to={ROUTES.ABOUT}>About</NavLink>\n      <NavLink to={ROUTES.CONTACT}>Contact</NavLink>\n      <NavLink to={ROUTES.SIGN_IN}>Sign in</NavLink>\n      <NavLink to={ROUTES.ADMIN}>Admin</NavLink>\n    </div>\n\t);\n}\n\nexport default Navigation;","import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport const withFirebase = Component => props => (\n  <FirebaseContext.Consumer>\n    {firebase => <Component {...props} firebase={firebase} />}\n  </FirebaseContext.Consumer>\n);\n\nexport default FirebaseContext;","import app from 'firebase/app';\nimport 'firebase/auth';\nrequire('dotenv').config()\n\nconst config = {\n  apiKey: \"AIzaSyCcNXC25DjJcI9l7iKvIK0183VAWNxu9Ag\",\n  authDomain: \"kovepages.firebaseapp.com\",\n  databaseURL: \"https://kovepages.firebaseio.com\",\n  projectId: \"kovepages\",\n  storageBucket: \"kovepages.appspot.com\",\n  messagingSenderId: \"559337801228\"\n};\n\nclass Firebase {\n  constructor() {\n    app.initializeApp(config);\n\n    this.auth = app.auth();\n  }\n\n  // *** Auth Api ***\n\n  doCreateUserWithEmailAndPassword = (email, password) => this.auth.createUserAndRetrieveDataWithEmailAndPassword(email, password);\n  \n  doSignInUserWithEmailAndPassword = (email, password) => this.auth.signInWithEmailAndPassword(email, password);\n  \n  doSignOut = () => this.auth.signOut();\n\n  doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\n\n  doPasswordUpdate = password => this.auth.currentUser.updatePassword(password);\n}\n\nexport default Firebase;","import FirebaseContext, { withFirebase } from './context';\nimport Firebase from './firebase';\n\nexport default Firebase;\n\nexport { FirebaseContext, withFirebase };","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst SignUpPage = () => (\n  <div className=\"App\">\n    <div className=\"PageName\">\n\t\t\tSign Up\n\t\t</div>\n\t\t\t<SignUpForm />\n  </div>\n);\n\nconst INITIAL_STATE = {\n  username: '',\n  email: '',\n  passwordOne: '',\n  passwordTwo: '',\n  error: null,\n};\n\nclass SignUpFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  };\n\n  onSubmit = event => {\n\t\t// eslint-disable-next-line\n\t\tconst { username, email, passwordOne } = this.state;\n\n    this.props.firebase\n      .doCreateUserWithEmailAndPassword(email, passwordOne)\n      .then(authUser => {\n        this.setState({ ...INITIAL_STATE });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n\t\tevent.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({[event.target.name]: event.target.value});\n  };\n\n  render() {\n    const {\n      username,\n      email,\n      passwordOne,\n      passwordTwo,\n      error,\n    } = this.state;\n\n    const isInvalid = \n      passwordOne !== passwordTwo || \n      passwordOne === '' ||\n      email === '' ||\n      username === '';\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"username\"\n          value={username}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Full Name\"\n        />\n        <input\n          name=\"email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Email Address\"\n        />\n        <input\n          name=\"passwordOne\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Password\"\n        />\n        <input\n          name=\"passwordTwo\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Confirm Password\"\n        />\n        <button disabled={isInvalid} type=\"submit\">Sign Up</button>\n        {error && <div>{error.message}</div>}\n      </form>\n    );\n  }\n}\nconst SignUpLink = () => (\n  <div>\n      Don't gave an account? <Link to={ROUTES.SIGN_UP}>Sign Up</Link>\n  </div>\n);\n\nconst SignUpForm = compose(\n  withRouter,\n  withFirebase,\n)(SignUpFormBase);\n\nexport default SignUpPage;\n\nexport { SignUpForm, SignUpLink };","import React from 'react';\n\nconst PasswordForgotPage = () => {\n\treturn(\n\t\t<div className=\"App\">\n\t\t\tPassword forgot page\n\t\t</div>\n\t);\n}\n\nexport default PasswordForgotPage;","import React from 'react';\n\nconst AccountPage = () => {\n\treturn(\n\t\t<div className=\"App\">\n\t\t\tAccount page\n\t\t</div>\n\t);\n}\n\nexport default AccountPage;","import React from 'react';\n\nconst AdminPage = () => {\n\treturn(\n\t\t<div className=\"App\">\n\t\t\tAdmin Page\n\t\t</div>\n\t);\n}\n\nexport default AdminPage;","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport './App.scss';\n\nimport Home from './components/Home/Home';\nimport About from './components/About/About';\nimport Contact from './components/Contact/Contact';\nimport SignInPage from './components/SignIn/SignIn';\nimport Error from './components/Error/Error';\nimport Navigation from './components/Navigation/Navigation';\nimport SignUpPage from './components/SignUp/SignUp';\nimport PasswordForgetPage from './components/PasswordForget/PasswordForgot';\nimport AccountPage from './components/Account/Account';\nimport AdminPage from './components/Admin/Admin';\n\nimport * as ROUTES from './constants/routes';\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Navigation/>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route path={ROUTES.HOME} component={Home} exact/>\n\t\t\t\t\t<Route path={ROUTES.ABOUT} component={About} />\n\t\t\t\t\t<Route path={ROUTES.CONTACT} component={Contact} />\n\t\t\t\t\t<Route path={ROUTES.SIGN_IN} component={SignInPage} />\n\t\t\t\t\t<Route path={ROUTES.SIGN_UP} component={SignUpPage} />\n\t\t\t\t\t<Route path={ROUTES.PASSWORD_FORGET} component={PasswordForgetPage} />\n\t\t\t\t\t<Route path={ROUTES.ACCOUNT} component={AccountPage} />\n\t\t\t\t\t<Route path={ROUTES.ADMIN} component={AdminPage} />\n\t\t\t\t\t<Route component={Error}/>\n\t\t\t\t</Switch>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport Firebase, { FirebaseContext } from './components/Firebase';\n\nReactDOM.render(\n  <FirebaseContext.Provider value={new Firebase()}>\n    <BrowserRouter>\n      <App/>\n    </BrowserRouter>\n  </FirebaseContext.Provider>\n  , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}