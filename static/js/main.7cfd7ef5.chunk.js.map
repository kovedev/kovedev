{"version":3,"sources":["components/Session/context.js","components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/index.js","components/Session/withAuthentication.js","constants/routes.js","components/Session/withAuthorization.js","components/Home/Home.js","components/About/About.js","components/Contact/Contact.js","constants/roles.js","components/SignUp/SignUp.js","components/PasswordForget/index.js","components/SignIn/SignIn.js","components/Error/Error.js","components/SignOut/index.js","components/Navigation/Navigation.js","components/PasswordChange/index.js","components/Account/index.js","components/Admin/Admin.js","App.js","serviceWorker.js","index.js"],"names":["AuthUserContext","React","createContext","FirebaseContext","withFirebase","Component","props","react_default","a","createElement","Consumer","firebase","Object","assign","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","components_Firebase","Firebase","_this","this","classCallCheck","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","onAuthUserListener","next","fallback","onAuthStateChanged","authUser","user","uid","once","then","snapshot","dbUser","val","roles","objectSpread","db","ref","concat","users","app","initializeApp","database","withAuthentication","WithAuthentication","_React$Component","possibleConstructorReturn","getPrototypeOf","call","state","inherits","createClass","key","value","_this2","listener","setState","context","Provider","HOME","SIGN_IN","ABOUT","CONTACT","withAuthorization","condition","WithAuthorization","apply","arguments","history","push","ROUTES","compose","withRouter","className","About","Contact","ADMIN","INITIAL_STATE","username","passwordOne","passwordTwo","isAdmin","error","SignUpFormBase","onSubmit","event","_this$state","ROLES","set","catch","preventDefault","onChange","defineProperty","target","name","onChangeCheckbox","checked","_this$state2","isInvalid","type","placeholder","disabled","message","SignUpLink","Link","to","SignUpForm","SignUp","PasswordForgetFormBase","PasswordForgetLink","PasswordForgetPage","PasswordForgetForm","SignInFormBase","SignInForm","SignIn","PasswordForget_PasswordForgetLink","SignUp_SignUpLink","Error","_ref","onClick","href","NavigationAuth","NavLink","includes","SignOut","NavigationNonAuth","Navigation","Navigation_NavigationAuth","Navigation_NavigationNonAuth","PasswordChangeForm","PasswordChange","AdminPage","loading","on","usersObject","usersList","keys","map","off","Admin_UserList","UserList","components_Navigation_Navigation","Switch","Route","path","component","Home","exact","SignInPage","SignUpPage","AccountPage","Boolean","window","location","hostname","match","ReactDOM","render","Firebase_context","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"2OAIeA,SAFSC,IAAMC,cAAc,0CCAtCC,EAAkBF,IAAMC,cAAc,MAE/BE,EAAe,SAAAC,GAAS,OAAI,SAAAC,GAAK,OAC5CC,EAAAC,EAAAC,cAACN,EAAgBO,SAAjB,KACG,SAAAC,GAAQ,OAAIJ,EAAAC,EAAAC,cAACJ,EAADO,OAAAC,OAAA,GAAeP,EAAf,CAAsBK,SAAUA,SAIlCR,4BCNTW,eAAS,CACbC,OAAQ,0CACRC,WAAY,4BACZC,YAAa,mCACbC,UAAW,YACXC,cAAe,wBACfC,kBAAmB,iBCPrBC,EDWE,SAAAC,IAAc,IAAAC,EAAAC,KAAAZ,OAAAa,EAAA,EAAAb,CAAAY,KAAAF,GAAAE,KASdE,iCAAmC,SAACC,EAAOC,GAAR,OAAqBL,EAAKM,KAAKC,+BAA+BH,EAAOC,IAT1FJ,KAWdO,6BAA+B,SAACJ,EAAOC,GAAR,OAAqBL,EAAKM,KAAKG,2BAA2BL,EAAOC,IAXlFJ,KAadS,UAAY,kBAAMV,EAAKM,KAAKK,WAbdV,KAedW,gBAAkB,SAAAR,GAAK,OAAIJ,EAAKM,KAAKO,uBAAuBT,IAf9CH,KAiBda,iBAAmB,SAAAT,GAAQ,OAAIL,EAAKM,KAAKS,YAAYC,eAAeX,IAjBtDJ,KAqBdgB,mBAAqB,SAACC,EAAMC,GAAP,OACrBnB,EAAKM,KAAKc,mBAAmB,SAAAC,GACvBA,EACFrB,EAAKsB,KAAKD,EAASE,KAChBC,KAAK,SACLC,KAAK,SAAAC,GACJ,IAAMC,EAASD,EAASE,MAGnBD,EAAOE,QACVF,EAAOE,MAAQ,IAIjBR,EAAQhC,OAAAyC,EAAA,EAAAzC,CAAA,CACNkC,IAAKF,EAASE,IACdnB,MAAOiB,EAASjB,OACbuB,GAGLT,EAAKG,KAGTF,OA5CUlB,KAkDdqB,KAAO,SAAAC,GAAG,OAAIvB,EAAK+B,GAAGC,IAAR,SAAAC,OAAqBV,KAlDrBtB,KAoDdiC,MAAQ,kBAAMlC,EAAK+B,GAAGC,IAAI,UAnDxBG,IAAIC,cAAc7C,GAElBU,KAAKK,KAAO6B,IAAI7B,OAChBL,KAAK8B,GAAKI,IAAIE,YEwBHC,EArCY,SAAAxD,GAAa,IAChCyD,EADgC,SAAAC,GAEpC,SAAAD,EAAYxD,GAAO,IAAAiB,EAAA,OAAAX,OAAAa,EAAA,EAAAb,CAAAY,KAAAsC,IACjBvC,EAAAX,OAAAoD,EAAA,EAAApD,CAAAY,KAAAZ,OAAAqD,EAAA,EAAArD,CAAAkD,GAAAI,KAAA1C,KAAMlB,KAED6D,MAAQ,CACXvB,SAAU,MAJKrB,EAFiB,OAAAX,OAAAwD,EAAA,EAAAxD,CAAAkD,EAAAC,GAAAnD,OAAAyD,EAAA,EAAAzD,CAAAkD,EAAA,EAAAQ,IAAA,oBAAAC,MAAA,WAUjB,IAAAC,EAAAhD,KACjBA,KAAKiD,SAAWjD,KAAKlB,MAAMK,SAAS6B,mBAClC,SAAAI,GACE4B,EAAKE,SAAS,CAAE9B,cAElB,WACE4B,EAAKE,SAAS,CAAE9B,SAAU,WAhBI,CAAA0B,IAAA,uBAAAC,MAAA,WAsBlC/C,KAAKiD,aAtB6B,CAAAH,IAAA,SAAAC,MAAA,WA0BlC,OACEhE,EAAAC,EAAAC,cAACkE,EAAgBC,SAAjB,CAA0BL,MAAO/C,KAAK2C,MAAMvB,UAC1CrC,EAAAC,EAAAC,cAACJ,EAAcmB,KAAKlB,YA5BUwD,EAAA,CACL7D,IAAMI,WAiCvC,OAAOD,EAAa0D,oBCtCTe,EAAO,YACPC,EAAU,mBAEVC,EAAQ,kBACRC,EAAU,oBCsCRC,EAnCW,SAAAC,GAAS,OAAI,SAAA7E,GAAa,IAC5C8E,EAD4C,SAAApB,GAAA,SAAAoB,IAAA,OAAAvE,OAAAa,EAAA,EAAAb,CAAAY,KAAA2D,GAAAvE,OAAAoD,EAAA,EAAApD,CAAAY,KAAAZ,OAAAqD,EAAA,EAAArD,CAAAuE,GAAAC,MAAA5D,KAAA6D,YAAA,OAAAzE,OAAAwD,EAAA,EAAAxD,CAAAuE,EAAApB,GAAAnD,OAAAyD,EAAA,EAAAzD,CAAAuE,EAAA,EAAAb,IAAA,oBAAAC,MAAA,WAG7B,IAAAhD,EAAAC,KACjBA,KAAKiD,SAAWjD,KAAKlB,MAAMK,SAAS6B,mBAClC,SAAAI,GACOsC,EAAUtC,IACbrB,EAAKjB,MAAMgF,QAAQC,KAAKC,IAG5B,kBAAMjE,EAAKjB,MAAMgF,QAAQC,KAAKC,OAVc,CAAAlB,IAAA,uBAAAC,MAAA,WAe9C/C,KAAKiD,aAfyC,CAAAH,IAAA,SAAAC,MAAA,WAkBvC,IAAAC,EAAAhD,KACP,OACEjB,EAAAC,EAAAC,cAACkE,EAAgBjE,SAAjB,KACI,SAAAkC,GAAQ,OACRsC,EAAUtC,GAAYrC,EAAAC,EAAAC,cAACJ,EAAcmE,EAAKlE,OAAY,WAtBd6E,EAAA,CAClBlF,IAAMI,WA4BtC,OAAOoF,YACLC,IACAtF,EAFKqF,CAGLN,KCrBWF,IAFG,SAAArC,GAAQ,QAAMA,GAEjBqC,CAfF,WACZ,OACC1E,EAAAC,EAAAC,cAAA,OAAKkF,UAAU,OACdpF,EAAAC,EAAAC,cAAA,OAAKkF,UAAU,YAAf,QAGApF,EAAAC,EAAAC,cAAA,mCCAYmF,EARD,WACb,OACCrF,EAAAC,EAAAC,cAAA,OAAKkF,UAAU,OAAf,UCMaE,EARC,WACf,OACCtF,EAAAC,EAAAC,cAAA,OAAKkF,UAAU,OAAf,4BCJWG,EAAQ,QCiBfC,EAAgB,CACpBC,SAAU,GACVrE,MAAO,GACPsE,YAAa,GACdC,YAAa,GACbC,SAAS,EACRC,MAAO,MAGHC,cACJ,SAAAA,EAAY/F,GAAO,IAAAiB,EAAA,OAAAX,OAAAa,EAAA,EAAAb,CAAAY,KAAA6E,IACjB9E,EAAAX,OAAAoD,EAAA,EAAApD,CAAAY,KAAAZ,OAAAqD,EAAA,EAAArD,CAAAyF,GAAAnC,KAAA1C,KAAMlB,KAKRgG,SAAW,SAAAC,GAAS,IAAAC,EAE8BjF,EAAK4C,MAA/C6B,EAFYQ,EAEZR,SAAUrE,EAFE6E,EAEF7E,MAAOsE,EAFLO,EAEKP,YAAaE,EAFlBK,EAEkBL,QAChC/C,EAAQ,GAEV+C,GACH/C,EAAMmC,KAAKkB,GAGVlF,EAAKjB,MAAMK,SACRe,iCAAiCC,EAAOsE,GACxCjD,KAAK,SAAAJ,GAEJ,OAAOrB,EAAKjB,MAAMK,SACfkC,KAAKD,EAASC,KAAKC,KACnB4D,IAAI,CACHV,WACNrE,QACAyB,YAGFJ,KAAK,WACDzB,EAAKmD,SAAL9D,OAAAyC,EAAA,EAAAzC,CAAA,GAAmBmF,IACnBxE,EAAKjB,MAAMgF,QAAQC,KAAKC,KAEzBmB,MAAM,SAAAP,GACL7E,EAAKmD,SAAS,CAAE0B,YAGtBG,EAAMK,kBAnCarF,EAsCnBsF,SAAW,SAAAN,GACThF,EAAKmD,SAAL9D,OAAAkG,EAAA,EAAAlG,CAAA,GAAgB2F,EAAMQ,OAAOC,KAAOT,EAAMQ,OAAOxC,SAvChChD,EA0CpB0F,iBAAmB,SAAAV,GAClBhF,EAAKmD,SAAL9D,OAAAkG,EAAA,EAAAlG,CAAA,GAAiB2F,EAAMQ,OAAOC,KAAOT,EAAMQ,OAAOG,WAxChD3F,EAAK4C,MAALvD,OAAAyC,EAAA,EAAAzC,CAAA,GAAkBmF,GAHDxE,wEA8CV,IAAA4F,EAQH3F,KAAK2C,MANP6B,EAFKmB,EAELnB,SACArE,EAHKwF,EAGLxF,MACAsE,EAJKkB,EAILlB,YACHC,EALQiB,EAKRjB,YACAC,EANQgB,EAMRhB,QACGC,EAPKe,EAOLf,MAGIgB,EACJnB,IAAgBC,GACA,KAAhBD,GACU,KAAVtE,GACa,KAAbqE,EAEF,OACEzF,EAAAC,EAAAC,cAAA,QAAM6F,SAAU9E,KAAK8E,UACnB/F,EAAAC,EAAAC,cAAA,SACEuG,KAAK,WACLzC,MAAOyB,EACPa,SAAUrF,KAAKqF,SACfQ,KAAK,OACLC,YAAY,cAEd/G,EAAAC,EAAAC,cAAA,SACEuG,KAAK,QACLzC,MAAO5C,EACPkF,SAAUrF,KAAKqF,SACfQ,KAAK,OACLC,YAAY,kBAEd/G,EAAAC,EAAAC,cAAA,SACEuG,KAAK,cACLzC,MAAO0B,EACPY,SAAUrF,KAAKqF,SACfQ,KAAK,WACLC,YAAY,aAEd/G,EAAAC,EAAAC,cAAA,SACEuG,KAAK,cACLzC,MAAO2B,EACPW,SAAUrF,KAAKqF,SACfQ,KAAK,WACLC,YAAY,qBAElB/G,EAAAC,EAAAC,cAAA,oBAECF,EAAAC,EAAAC,cAAA,SACCuG,KAAK,UACLK,KAAK,WACLH,QAASf,EACTU,SAAUrF,KAAKyF,oBAGb1G,EAAAC,EAAAC,cAAA,UAAQ8G,SAAUH,EAAWC,KAAK,UAAlC,WACCjB,GAAS7F,EAAAC,EAAAC,cAAA,WAAM2F,EAAMoB,iBAvGDnH,aA4GvBoH,EAAa,kBACjBlH,EAAAC,EAAAC,cAAA,OAAKkF,UAAU,cAAf,0BACuBpF,EAAAC,EAAAC,cAACiH,EAAA,EAAD,CAAMC,GNrIR,oBMqIE,aAInBC,EAAanC,YACjBC,IACAtF,EAFiBqF,CAGjBY,GAEFwB,EAzImB,kBACjBtH,EAAAC,EAAAC,cAAA,OAAKkF,UAAU,OACbpF,EAAAC,EAAAC,cAAA,OAAKkF,UAAU,YAAf,WAGFpF,EAAAC,EAAAC,cAACmH,EAAD,QCEI7B,EAAgB,CACpBpE,MAAO,GACPyE,MAAO,MAGH0B,cACJ,SAAAA,EAAYxH,GAAO,IAAAiB,EAAA,OAAAX,OAAAa,EAAA,EAAAb,CAAAY,KAAAsG,IACjBvG,EAAAX,OAAAoD,EAAA,EAAApD,CAAAY,KAAAZ,OAAAqD,EAAA,EAAArD,CAAAkH,GAAA5D,KAAA1C,KAAMlB,KAKRgG,SAAW,SAAAC,GAAS,IACV5E,EAAUJ,EAAK4C,MAAfxC,MAERJ,EAAKjB,MAAMK,SACRwB,gBAAgBR,GAChBqB,KAAK,WACJzB,EAAKmD,SAAL9D,OAAAyC,EAAA,EAAAzC,CAAA,GAAmBmF,MAEpBY,MAAM,SAAAP,GACL7E,EAAKmD,SAAS,CAAE0B,YAGpBG,EAAMK,kBAlBWrF,EAqBnBsF,SAAW,SAAAN,GACThF,EAAKmD,SAAL9D,OAAAkG,EAAA,EAAAlG,CAAA,GAAiB2F,EAAMQ,OAAOC,KAAOT,EAAMQ,OAAOxC,SAnBlDhD,EAAK4C,MAALvD,OAAAyC,EAAA,EAAAzC,CAAA,GAAkBmF,GAHDxE,wEAyBV,IAAAiF,EACkBhF,KAAK2C,MAAtBxC,EADD6E,EACC7E,MAAOyE,EADRI,EACQJ,MAETgB,EAAsB,KAAVzF,EAElB,OACEpB,EAAAC,EAAAC,cAAA,QAAM6F,SAAU9E,KAAK8E,UACnB/F,EAAAC,EAAAC,cAAA,SACEuG,KAAK,QACLzC,MAAO/C,KAAK2C,MAAMxC,MAClBkF,SAAUrF,KAAKqF,SACfQ,KAAK,OACLC,YAAY,kBAEd/G,EAAAC,EAAAC,cAAA,UAAQ8G,SAAUH,EAAWC,KAAK,UAAlC,qBAICjB,GAAS7F,EAAAC,EAAAC,cAAA,SAAI2F,EAAMoB,iBA5CSnH,aAkD/B0H,EAAqB,kBACzBxH,EAAAC,EAAAC,cAAA,OAAKkF,UAAU,cACbpF,EAAAC,EAAAC,cAACiH,EAAA,EAAD,CAAMC,GPjEqB,uBOiE3B,sBAIWK,EAtEY,kBACzBzH,EAAAC,EAAAC,cAAA,OAAKkF,UAAU,OACbpF,EAAAC,EAAAC,cAAA,OAAKkF,UAAU,YAAf,uBAGApF,EAAAC,EAAAC,cAACwH,EAAD,QAmEEA,EAAqB7H,EAAa0H,GC1DlC/B,EAAgB,CACpBpE,MAAO,GACPC,SAAU,GACVwE,MAAO,MAGH8B,cACJ,SAAAA,EAAY5H,GAAO,IAAAiB,EAAA,OAAAX,OAAAa,EAAA,EAAAb,CAAAY,KAAA0G,IACjB3G,EAAAX,OAAAoD,EAAA,EAAApD,CAAAY,KAAAZ,OAAAqD,EAAA,EAAArD,CAAAsH,GAAAhE,KAAA1C,KAAMlB,KAKRgG,SAAW,SAAAC,GAAS,IAAAC,EACUjF,EAAK4C,MAAzBxC,EADU6E,EACV7E,MAAOC,EADG4E,EACH5E,SACfL,EAAKjB,MAAMK,SACZoB,6BAA6BJ,EAAOC,GACpCoB,KAAK,WACAzB,EAAKmD,SAAL9D,OAAAyC,EAAA,EAAAzC,CAAA,GAAmBmF,IACnBxE,EAAKjB,MAAMgF,QAAQC,KAAKC,KAEzBmB,MAAM,SAAAP,GACL7E,EAAKmD,SAAS,CAAE0B,YAGpBG,EAAMK,kBAlBWrF,EAqBnBsF,SAAW,SAAAN,GACThF,EAAKmD,SAAL9D,OAAAkG,EAAA,EAAAlG,CAAA,GAAiB2F,EAAMQ,OAAOC,KAAOT,EAAMQ,OAAOxC,SAnBlDhD,EAAK4C,MAALvD,OAAAyC,EAAA,EAAAzC,CAAA,GAAkBmF,GAHDxE,wEAyBV,IAAA4F,EAC4B3F,KAAK2C,MAAhCxC,EADDwF,EACCxF,MAAOC,EADRuF,EACQvF,SAAUwE,EADlBe,EACkBf,MAEnBgB,EAAyB,KAAbxF,GAA6B,KAAVD,EAErC,OACEpB,EAAAC,EAAAC,cAAA,QAAM6F,SAAU9E,KAAK8E,UACnB/F,EAAAC,EAAAC,cAAA,SACEuG,KAAK,QACLzC,MAAO5C,EACPkF,SAAUrF,KAAKqF,SACfQ,KAAK,OACLC,YAAY,kBAEd/G,EAAAC,EAAAC,cAAA,SACEuG,KAAK,WACLzC,MAAO3C,EACPiF,SAAUrF,KAAKqF,SACfQ,KAAK,WACLC,YAAY,aAEd/G,EAAAC,EAAAC,cAAA,UAAQ8G,SAAUH,EAAWC,KAAK,UAAlC,WAICjB,GAAS7F,EAAAC,EAAAC,cAAA,SAAI2F,EAAMoB,iBAnDCnH,aAyDvB8H,EAAa1C,YACjBC,IACAtF,EAFiBqF,CAGjByC,GAEFE,EA/EmB,kBAClB7H,EAAAC,EAAAC,cAAA,OAAKkF,UAAU,OACdpF,EAAAC,EAAAC,cAAA,OAAKkF,UAAU,YAAf,gBAGEpF,EAAAC,EAAAC,cAAC0H,EAAD,MACF5H,EAAAC,EAAAC,cAAC4H,EAAD,MACE9H,EAAAC,EAAAC,cAAC6H,EAAD,QCNWC,EARD,WACb,OACChI,EAAAC,EAAAC,cAAA,OAAKkF,UAAU,OAAf,+BCQavF,IARO,SAAAoI,GAAA,IAAG7H,EAAH6H,EAAG7H,SAAH,OACpBJ,EAAAC,EAAAC,cAAA,OAAKgI,QAAS9H,EAASsB,WAErB1B,EAAAC,EAAAC,cAAA,KAAGiI,KAAK,KAAR,eCWEC,GAAiB,SAAAH,GAAA,IAAG5F,EAAH4F,EAAG5F,SAAH,OACrBrC,EAAAC,EAAAC,cAAA,OAAKkF,UAAU,UACbpF,EAAAC,EAAAC,cAACmI,EAAA,EAAD,CAASjB,GAAInC,GAAb,QACAjF,EAAAC,EAAAC,cAACmI,EAAA,EAAD,CAASjB,GAAInC,GAAb,SACAjF,EAAAC,EAAAC,cAACmI,EAAA,EAAD,CAASjB,GAAInC,GAAb,WACAjF,EAAAC,EAAAC,cAACmI,EAAA,EAAD,CAASjB,GXjBU,qBWiBnB,WACC/E,EAASQ,MAAMyF,SAASpC,IACvBlG,EAAAC,EAAAC,cAACmI,EAAA,EAAD,CAASjB,GXjBM,mBWiBf,SAEFpH,EAAAC,EAAAC,cAACqI,EAAD,QAIEC,GAAoB,kBACxBxI,EAAAC,EAAAC,cAAA,OAAKkF,UAAU,UACbpF,EAAAC,EAAAC,cAACmI,EAAA,EAAD,CAASjB,GAAInC,GAAb,QACAjF,EAAAC,EAAAC,cAACmI,EAAA,EAAD,CAASjB,GAAInC,GAAb,SACAjF,EAAAC,EAAAC,cAACmI,EAAA,EAAD,CAASjB,GAAInC,GAAb,WACAjF,EAAAC,EAAAC,cAACmI,EAAA,EAAD,CAASjB,GAAInC,GAAb,aAKWwD,GAjCI,kBACjBzI,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACkE,EAAgBjE,SAAjB,KACI,SAAAkC,GAAQ,OACNA,EAAWrC,EAAAC,EAAAC,cAACwI,GAAD,CAAiBrG,SAAUA,IAAerC,EAAAC,EAAAC,cAACyI,GAAD,UCRzDnD,GAAgB,CACpBE,YAAa,GACbC,YAAa,GACbE,MAAO,MAGH+C,eACJ,SAAAA,EAAY7I,GAAO,IAAAiB,EAAA,OAAAX,OAAAa,EAAA,EAAAb,CAAAY,KAAA2H,IACjB5H,EAAAX,OAAAoD,EAAA,EAAApD,CAAAY,KAAAZ,OAAAqD,EAAA,EAAArD,CAAAuI,GAAAjF,KAAA1C,KAAMlB,KAKRgG,SAAW,SAAAC,GAAS,IACVN,EAAgB1E,EAAK4C,MAArB8B,YAER1E,EAAKjB,MAAMK,SACR0B,iBAAiB4D,GACjBjD,KAAK,WACJzB,EAAKmD,SAAL9D,OAAAyC,EAAA,EAAAzC,CAAA,GAAmBmF,OAEpBY,MAAM,SAAAP,GACL7E,EAAKmD,SAAS,CAAE0B,YAGpBG,EAAMK,kBAlBWrF,EAqBnBsF,SAAW,SAAAN,GACThF,EAAKmD,SAAL9D,OAAAkG,EAAA,EAAAlG,CAAA,GAAiB2F,EAAMQ,OAAOC,KAAOT,EAAMQ,OAAOxC,SAnBlDhD,EAAK4C,MAALvD,OAAAyC,EAAA,EAAAzC,CAAA,GAAkBmF,IAHDxE,wEAyBV,IAAAiF,EACqChF,KAAK2C,MAAzC8B,EADDO,EACCP,YAAaC,EADdM,EACcN,YAAaE,EAD3BI,EAC2BJ,MAE5BgB,EACJnB,IAAgBC,GAA+B,KAAhBD,EAEjC,OACE1F,EAAAC,EAAAC,cAAA,QAAM6F,SAAU9E,KAAK8E,UACnB/F,EAAAC,EAAAC,cAAA,SACEuG,KAAK,cACLzC,MAAO0B,EACPY,SAAUrF,KAAKqF,SACfQ,KAAK,WACLC,YAAY,iBAEd/G,EAAAC,EAAAC,cAAA,SACEuG,KAAK,cACLzC,MAAO2B,EACPW,SAAUrF,KAAKqF,SACfQ,KAAK,WACLC,YAAY,yBAEd/G,EAAAC,EAAAC,cAAA,UAAQ8G,SAAUH,EAAWC,KAAK,UAAlC,qBAICjB,GAAS7F,EAAAC,EAAAC,cAAA,SAAI2F,EAAMoB,iBApDKnH,aA0DlBD,KAAa+I,IChDblE,KAFG,SAAArC,GAAQ,QAAMA,GAEjBqC,CAdK,kBAClB1E,EAAAC,EAAAC,cAACkE,EAAgBjE,SAAjB,KACC,SAAAkC,GAAQ,OACRrC,EAAAC,EAAAC,cAAA,OAAKkF,UAAU,OACdpF,EAAAC,EAAAC,cAAA,OAAKkF,UAAU,YAAf,aACApF,EAAAC,EAAAC,cAACwH,EAAD,MACA1H,EAAAC,EAAAC,cAAC2I,GAAD,WCLEC,eACJ,SAAAA,EAAY/I,GAAM,IAAAiB,EAAA,OAAAX,OAAAa,EAAA,EAAAb,CAAAY,KAAA6H,IAChB9H,EAAAX,OAAAoD,EAAA,EAAApD,CAAAY,KAAAZ,OAAAqD,EAAA,EAAArD,CAAAyI,GAAAnF,KAAA1C,KAAMlB,KAED6D,MAAQ,CACXmF,SAAS,EACT7F,MAAO,IALOlC,mFASC,IAAAiD,EAAAhD,KACjBA,KAAKkD,SAAS,CAAE4E,SAAS,IAEzB9H,KAAKlB,MAAMK,SAAS8C,QAAQ8F,GAAG,QAAS,SAAAtG,GACtC,IAAMuG,EAAcvG,EAASE,MAEvBsG,EAAY7I,OAAO8I,KAAKF,GAAaG,IAAI,SAAArF,GAAG,OAAA1D,OAAAyC,EAAA,EAAAzC,CAAA,GAC7C4I,EAAYlF,GADiC,CAEhDxB,IAAKwB,MAGPE,EAAKE,SAAS,CACZjB,MAAOgG,EACPH,SAAS,qDAMb9H,KAAKlB,MAAMK,SAAS8C,QAAQmG,uCAGvB,IAAApD,EACsBhF,KAAK2C,MAAxBV,EADH+C,EACG/C,MAAO6F,EADV9C,EACU8C,QAEf,OACE/I,EAAAC,EAAAC,cAAA,OAAKkF,UAAU,OACbpF,EAAAC,EAAAC,cAAA,OAAKkF,UAAU,YAAf,cACApF,EAAAC,EAAAC,cAAA,0EAGAF,EAAAC,EAAAC,cAAA,OAAKkF,UAAU,YACbpF,EAAAC,EAAAC,cAAA,OAAKkF,UAAU,aAAf,sBACC2D,GAAW/I,EAAAC,EAAAC,cAAA,yBACZF,EAAAC,EAAAC,cAACoJ,GAAD,CAAUpG,MAAOA,aA5CHpD,aAmDlByJ,GAAW,SAAAtB,GAAA,IAAG/E,EAAH+E,EAAG/E,MAAH,OACflD,EAAAC,EAAAC,cAAA,UACGgD,EAAMkG,IAAI,SAAA9G,GAAI,OACbtC,EAAAC,EAAAC,cAAA,MAAI6D,IAAKzB,EAAKC,KACXD,EAAKmD,cASCP,eACbR,EAJgB,SAAArC,GAAQ,OACxBA,GAAYA,EAASQ,MAAMyF,SAASpC,KAIpCrG,EAFaqF,CAGb4D,ICvCaxF,KAjBH,kBACXtD,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAACsJ,GAAD,MACAxJ,EAAAC,EAAAC,cAACuJ,EAAA,EAAD,KACCzJ,EAAAC,EAAAC,cAACwJ,EAAA,EAAD,CAAOC,KAAM1E,EAAa2E,UAAWC,EAAMC,OAAK,IAChD9J,EAAAC,EAAAC,cAACwJ,EAAA,EAAD,CAAOC,KAAM1E,EAAc2E,UAAWvE,IACtCrF,EAAAC,EAAAC,cAACwJ,EAAA,EAAD,CAAOC,KAAM1E,EAAgB2E,UAAWtE,IACxCtF,EAAAC,EAAAC,cAACwJ,EAAA,EAAD,CAAOC,KAAM1E,EAAgB2E,UAAWG,IACxC/J,EAAAC,EAAAC,cAACwJ,EAAA,EAAD,CAAOC,KfvBa,mBeuBSC,UAAWI,IACxChK,EAAAC,EAAAC,cAACwJ,EAAA,EAAD,CAAOC,KfpBqB,sBeoBSC,UAAWnC,IAChDzH,EAAAC,EAAAC,cAACwJ,EAAA,EAAD,CAAOC,KftBa,oBesBSC,UAAWK,KACxCjK,EAAAC,EAAAC,cAACwJ,EAAA,EAAD,CAAOC,KfrBW,kBeqBSC,UAAWd,KACtC9I,EAAAC,EAAAC,cAACwJ,EAAA,EAAD,CAAOE,UAAW5B,QClBDkC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,wECVNC,IAASC,OACPxK,EAAAC,EAAAC,cAACuK,EAAgBpG,SAAjB,CAA0BL,MAAO,IAAIjD,GACnCf,EAAAC,EAAAC,cAACwK,GAAA,EAAD,KACE1K,EAAAC,EAAAC,cAACyK,GAAD,QAGFC,SAASC,eAAe,SDmHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMvI,KAAK,SAAAwI,GACjCA,EAAaC","file":"static/js/main.7cfd7ef5.chunk.js","sourcesContent":["import React from 'react';\n\nconst AuthUserContext = React.createContext(null);\n\nexport default AuthUserContext;","import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport const withFirebase = Component => props => (\n  <FirebaseContext.Consumer>\n    {firebase => <Component {...props} firebase={firebase} />}\n  </FirebaseContext.Consumer>\n);\n\nexport default FirebaseContext;","import app from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\n\nconst config = {\n  apiKey: \"AIzaSyCcNXC25DjJcI9l7iKvIK0183VAWNxu9Ag\",\n  authDomain: \"kovepages.firebaseapp.com\",\n  databaseURL: \"https://kovepages.firebaseio.com\",\n  projectId: \"kovepages\",\n  storageBucket: \"kovepages.appspot.com\",\n  messagingSenderId: \"559337801228\"\n};\n\nclass Firebase {\n  constructor() {\n    app.initializeApp(config);\n\n    this.auth = app.auth();\n    this.db = app.database();\n  }\n\n  // *** Auth Api ***\n\n  doCreateUserWithEmailAndPassword = (email, password) => this.auth.createUserWithEmailAndPassword(email, password);\n  \n  doSignInWithEmailAndPassword = (email, password) => this.auth.signInWithEmailAndPassword(email, password);\n  \n  doSignOut = () => this.auth.signOut();\n\n  doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\n\n  doPasswordUpdate = password => this.auth.currentUser.updatePassword(password);\n\n  // ** Merge Auth and DB User API *** //\n\n  onAuthUserListener = (next, fallback) =>\n  this.auth.onAuthStateChanged(authUser => {\n    if (authUser) {\n      this.user(authUser.uid)\n        .once('value')\n        .then(snapshot => {\n          const dbUser = snapshot.val();\n\n          // default empty roles\n          if (!dbUser.roles) {\n            dbUser.roles = [];\n          }\n\n          // merge auth and db user\n          authUser = {\n            uid: authUser.uid,\n            email: authUser.email,\n            ...dbUser,\n          };\n\n          next(authUser);\n        });\n    } else {\n      fallback();\n    }\n  });\n\n  // *** User API ***\n\n  user = uid => this.db.ref(`users/${uid}`);\n\n  users = () => this.db.ref('users');\n\n}\n\nexport default Firebase;","import FirebaseContext, { withFirebase } from './context';\nimport Firebase from './firebase';\n\nexport default Firebase;\n\nexport { FirebaseContext, withFirebase };","import React from 'react';\n\nimport { withFirebase } from '../Firebase';\nimport { AuthUserContext } from '../Session';\n\nconst withAuthentication = Component => {\n  class WithAuthentication extends React.Component {\n    constructor(props) {\n      super(props);\n  \n      this.state = {\n        authUser: null,\n      }\n    }\n\n    componentDidMount(){\n      this.listener = this.props.firebase.onAuthUserListener(\n        authUser => {\n          this.setState({ authUser });\n        },\n        () => {\n          this.setState({ authUser: null });\n        },\n      );\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n  \n    render(){\n      return (\n        <AuthUserContext.Provider value={this.state.authUser}>\n          <Component {...this.props} />\n        </AuthUserContext.Provider>\n      );\n    }\n  }\n\n  return withFirebase(WithAuthentication);\n}\n\nexport default withAuthentication;","export const LANDING = '/kovedev/';\nexport const HOME = '/kovedev/';\nexport const SIGN_IN = '/kovedev/signin/';\nexport const SIGN_UP = '/kovedev/signup/';\nexport const ABOUT = '/kovedev/about/';\nexport const CONTACT = '/kovedev/contact/';\nexport const ACCOUNT = '/kovedev/account/';\nexport const PASSWORD_FORGET = '/kovedev/pw-forgot/';\nexport const ADMIN = '/kovedev/admin/';","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst withAuthorization = condition => Component => {\n  class WithAuthorization extends React.Component {\n\n    componentDidMount(){\n      this.listener = this.props.firebase.onAuthUserListener(\n        authUser => {\n          if (!condition(authUser)) {\n            this.props.history.push(ROUTES.SIGN_IN);\n          }\n        },\n        () => this.props.history.push(ROUTES.SIGN_IN),\n      );\n    }\n\n    componentWillUnmount(){\n      this.listener();\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Consumer>\n          { authUser => \n            condition(authUser) ? <Component {...this.props} /> : null \n          }\n        </AuthUserContext.Consumer>\n      );\n    }\n  }\n\n  return compose(\n    withRouter,\n    withFirebase\n  )(WithAuthorization);\n};\n\nexport default withAuthorization;","import React from 'react';\n\nimport { withAuthorization } from '../Session';\n\nconst Home = () => {\n\treturn(\n\t\t<div className=\"App\">\n\t\t\t<div className=\"PageName\">\n\t\t\t\tHome\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\tYou are logged in\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(Home);","import React from 'react';\n\nconst About = () => {\n\treturn(\n\t\t<div className=\"App\">\n\t\t\tAbout\n\t\t</div>\n\t);\n}\n\nexport default About;","import React from 'react';\n\nconst Contact = () => {\n\treturn(\n\t\t<div className=\"App\">\n\t\t\tContact\n\t\t</div>\n\t);\n}\n\nexport default Contact;","export const ADMIN = 'ADMIN';","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\nimport * as ROLES from '../../constants/roles';\n\nconst SignUpPage = () => (\n  <div className=\"App\">\n    <div className=\"PageName\">\n\t\t\tSign Up\n\t\t</div>\n\t\t<SignUpForm />\n  </div>\n);\n\nconst INITIAL_STATE = {\n  username: '',\n  email: '',\n  passwordOne: '',\n\tpasswordTwo: '',\n\tisAdmin: false,\n  error: null,\n};\n\nclass SignUpFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  };\n\n  onSubmit = event => {\n\t\t// eslint-disable-next-line\n\t\tconst { username, email, passwordOne, isAdmin } = this.state;\n\t\tconst roles = [];\n\n\t\tif (isAdmin){\n\t\t\troles.push(ROLES.ADMIN);\n\t\t}\n\n    this.props.firebase\n      .doCreateUserWithEmailAndPassword(email, passwordOne)\n      .then(authUser => {\n        // Create a user in your Firebase realtime database\n        return this.props.firebase\n          .user(authUser.user.uid)\n          .set({\n            username,\n\t\t\t\t\t\temail,\n\t\t\t\t\t\troles\n          });\n\t\t\t})\n\t\t\t.then(() => {\n        this.setState({ ...INITIAL_STATE });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n\t\tevent.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({[event.target.name]: event.target.value});\n  };\n\n\tonChangeCheckbox = event => {\n\t\tthis.setState({ [event.target.name]: event.target.checked });\n\t}\n\n  render() {\n    const {\n      username,\n      email,\n      passwordOne,\n\t\t\tpasswordTwo,\n\t\t\tisAdmin,\n      error,\n    } = this.state;\n\n    const isInvalid = \n      passwordOne !== passwordTwo || \n      passwordOne === '' ||\n      email === '' ||\n      username === '';\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"username\"\n          value={username}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Full Name\"\n        />\n        <input\n          name=\"email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Email Address\"\n        />\n        <input\n          name=\"passwordOne\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Password\"\n        />\n        <input\n          name=\"passwordTwo\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Confirm Password\"\n        />\n\t\t\t\t<div>\n\t\t\t\t\tAdmin:\n\t\t\t\t\t<input \n\t\t\t\t\t\tname=\"isAdmin\"\n\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\tchecked={isAdmin}\n\t\t\t\t\t\tonChange={this.onChangeCheckbox}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n        <button disabled={isInvalid} type=\"submit\">Sign Up</button>\n        {error && <div>{error.message}</div>}\n      </form>\n    );\n  }\n}\nconst SignUpLink = () => (\n  <div className=\"SignUpLink\">\n\t\tDon't have an account? <Link to={ROUTES.SIGN_UP}>Sign Up</Link>\n  </div>\n);\n\nconst SignUpForm = compose(\n  withRouter,\n  withFirebase,\n)(SignUpFormBase);\n\nexport default SignUpPage;\n\nexport { SignUpForm, SignUpLink };","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst PasswordForgetPage = () => (\n  <div className=\"App\">\n    <div className=\"PageName\">\n\t\t\tPasswordforgot page\n\t\t</div>\n    <PasswordForgetForm />\n  </div>\n);\n\nconst INITIAL_STATE = {\n  email: '',\n  error: null,\n};\n\nclass PasswordForgetFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { email } = this.state;\n\n    this.props.firebase\n      .doPasswordReset(email)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { email, error } = this.state;\n\n    const isInvalid = email === '';\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"email\"\n          value={this.state.email}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Email Address\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Reset My Password\n        </button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nconst PasswordForgetLink = () => (\n  <div className=\"SignUpLink\">\n    <Link to={ROUTES.PASSWORD_FORGET}>Forgot Password?</Link>\n  </div>\n);\n\nexport default PasswordForgetPage;\n\nconst PasswordForgetForm = withFirebase(PasswordForgetFormBase);\n\nexport { PasswordForgetForm, PasswordForgetLink };","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport { SignUpLink } from '../SignUp/SignUp';\nimport { PasswordForgetLink } from '../PasswordForget'; \nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst SignInPage = () => (\n\t<div className=\"App\">\n\t\t<div className=\"PageName\">\n\t\t\tSign in Page\n\t\t</div>\n    <SignInForm />\n\t\t<PasswordForgetLink />\n    <SignUpLink />\n  </div>\n);\n\nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n  error: null,\n};\n\nclass SignInFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { email, password } = this.state;\n    this.props.firebase\n\t\t.doSignInWithEmailAndPassword(email, password)\n\t\t.then(() => {\n        this.setState({ ...INITIAL_STATE });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { email, password, error } = this.state;\n\n    const isInvalid = password === '' || email === '';\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Email Address\"\n        />\n        <input\n          name=\"password\"\n          value={password}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Password\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Sign In\n        </button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nconst SignInForm = compose(\n  withRouter,\n  withFirebase,\n)(SignInFormBase);\n\nexport default SignInPage;\n\nexport { SignInForm };","import React from 'react';\n\nconst Error = () => {\n\treturn(\n\t\t<div className=\"App\">\n\t\t\t404 page not found\n\t\t</div>\n\t);\n}\n\nexport default Error;","import React from 'react';\n\nimport { withFirebase } from '../Firebase';\n\nconst SignOutButton = ({ firebase }) => (\n  <div onClick={firebase.doSignOut}>\n    {// eslint-disable-next-line\n    <a href=\"#\">Sign out</a>\n    }\n  </div>\n);\n\nexport default withFirebase(SignOutButton);","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport SignOutButton from '../SignOut';\nimport * as ROUTES from '../../constants/routes';\nimport { AuthUserContext } from '../Session';\nimport * as ROLES from '../../constants/roles';\n\nconst Navigation = () => (\n  <div>\n    <AuthUserContext.Consumer>\n      { authUser =>\n          authUser ? <NavigationAuth  authUser={authUser} /> : <NavigationNonAuth />\n      }\n    </AuthUserContext.Consumer>\n  </div>\n);\n\nconst NavigationAuth = ({ authUser }) => (\n  <div className=\"NavBar\">\n    <NavLink to={ROUTES.HOME}>Home</NavLink>\n    <NavLink to={ROUTES.ABOUT}>About</NavLink>\n    <NavLink to={ROUTES.CONTACT}>Contact</NavLink>\n    <NavLink to={ROUTES.ACCOUNT}>Account</NavLink>\n    {authUser.roles.includes(ROLES.ADMIN) && (\n      <NavLink to={ROUTES.ADMIN}>Admin</NavLink>\n    )}\n    <SignOutButton />\n  </div>\n);\n\nconst NavigationNonAuth = () => (\n  <div className=\"NavBar\">\n    <NavLink to={ROUTES.HOME}>Home</NavLink>\n    <NavLink to={ROUTES.ABOUT}>About</NavLink>\n    <NavLink to={ROUTES.CONTACT}>Contact</NavLink>\n    <NavLink to={ROUTES.SIGN_IN}>Sign in</NavLink>\n    {/* <NavLink to={ROUTES.ADMIN}>Admin</NavLink> */}\n  </div>\n);\n\nexport default Navigation;","import React, { Component } from 'react';\n\nimport { withFirebase } from '../Firebase';\n\nconst INITIAL_STATE = {\n  passwordOne: '',\n  passwordTwo: '',\n  error: null,\n};\n\nclass PasswordChangeForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { passwordOne } = this.state;\n\n    this.props.firebase\n      .doPasswordUpdate(passwordOne)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { passwordOne, passwordTwo, error } = this.state;\n\n    const isInvalid =\n      passwordOne !== passwordTwo || passwordOne === '';\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"passwordOne\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"New Password\"\n        />\n        <input\n          name=\"passwordTwo\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Confirm New Password\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Reset My Password\n        </button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default withFirebase(PasswordChangeForm);","import React from 'react';\n\nimport { AuthUserContext, withAuthorization } from '../Session';\nimport { PasswordForgetForm } from '../PasswordForget';\nimport PasswordChangeForm from '../PasswordChange';\n\nconst AccountPage = () => (\n  <AuthUserContext.Consumer>\n\t\t{authUser => (\n\t\t\t<div className=\"App\">\n\t\t\t\t<div className=\"PageName\">Account: {/* authUser.email */}</div>\n\t\t\t\t<PasswordForgetForm />\n\t\t\t\t<PasswordChangeForm />\n\t\t\t</div>\n\t\t)}\n  </AuthUserContext.Consumer>\n);\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(AccountPage);","import React, { Component } from 'react';\nimport { compose } from 'recompose';\n\nimport { withFirebase } from '../Firebase';\nimport * as ROLES from '../../constants/roles';\nimport { withAuthorization } from '../Session';\n\nclass AdminPage extends Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      loading: false,\n      users: []\n    };\n  }\n\n  componentDidMount(){\n    this.setState({ loading: true });\n\n    this.props.firebase.users().on('value', snapshot => {\n      const usersObject = snapshot.val();\n\n      const usersList = Object.keys(usersObject).map(key=>({\n        ...usersObject[key],\n        uid: key\n      }))\n\n      this.setState({\n        users: usersList,\n        loading: false,\n      });\n    });\n  }\n\n  componentWillUnmount(){\n    this.props.firebase.users().off();\n  }\n\n\trender(){\n    const { users, loading } = this.state;\n\n    return(\n      <div className=\"App\">\n        <div className=\"PageName\">Admin Page</div>\n        <div>\n          The Admin Page is accessible by every signed in admin user.\n        </div>\n        <div className=\"UserList\">\n          <div className=\"Registers\">Registered users: </div>\n          {loading && <ul>Loading ...</ul>}\n          <UserList users={users} />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst UserList = ({ users }) => (\n  <ul>\n    {users.map(user => (\n      <li key={user.uid}>\n        {user.username}\n      </li>\n    ))}\n  </ul>\n);\n\nconst condition = authUser => \n  authUser && authUser.roles.includes(ROLES.ADMIN);\n\nexport default compose(\n  withAuthorization(condition),\n  withFirebase,\n)(AdminPage);","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport './App.scss';\n\nimport Home from './components/Home/Home';\nimport About from './components/About/About';\nimport Contact from './components/Contact/Contact';\nimport SignInPage from './components/SignIn/SignIn';\nimport Error from './components/Error/Error';\nimport Navigation from './components/Navigation/Navigation';\nimport SignUpPage from './components/SignUp/SignUp';\nimport PasswordForgetPage from './components/PasswordForget';\nimport AccountPage from './components/Account';\nimport AdminPage from './components/Admin/Admin';\n\nimport * as ROUTES from './constants/routes';\nimport { withAuthentication } from './components/Session';\n\nconst App = () => (\n\t<div>\n\t\t<Navigation />\n\t\t<Switch>\n\t\t\t<Route path={ROUTES.HOME} component={Home} exact/>\n\t\t\t<Route path={ROUTES.ABOUT} component={About} />\n\t\t\t<Route path={ROUTES.CONTACT} component={Contact} />\n\t\t\t<Route path={ROUTES.SIGN_IN} component={SignInPage} />\n\t\t\t<Route path={ROUTES.SIGN_UP} component={SignUpPage} />\n\t\t\t<Route path={ROUTES.PASSWORD_FORGET} component={PasswordForgetPage} />\n\t\t\t<Route path={ROUTES.ACCOUNT} component={AccountPage} />\n\t\t\t<Route path={ROUTES.ADMIN} component={AdminPage} />\n\t\t\t<Route component={Error}/>\n\t\t</Switch>\n\t</div>\n);\n\nexport default withAuthentication(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport Firebase, { FirebaseContext } from './components/Firebase';\n\nReactDOM.render(\n  <FirebaseContext.Provider value={new Firebase()}>\n    <BrowserRouter>\n      <App/>\n    </BrowserRouter>\n  </FirebaseContext.Provider>\n  , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}