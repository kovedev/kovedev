{"version":3,"sources":["components/Home/Home.js","components/About/About.js","components/Contact/Contact.js","components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/index.js","constants/routes.js","components/SignUp/SignUp.js","components/SignIn/SignIn.js","components/Error/Error.js","components/SignOut/index.js","components/Navigation/Navigation.js","components/PasswordForget/PasswordForgot.js","components/Account/Account.js","components/Admin/Admin.js","App.js","serviceWorker.js","index.js"],"names":["Home","react_default","a","createElement","className","About","Contact","FirebaseContext","React","createContext","withFirebase","Component","props","Consumer","firebase","Object","assign","require","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","components_Firebase","Firebase","_this","this","classCallCheck","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","app","initializeApp","HOME","ABOUT","CONTACT","INITIAL_STATE","username","passwordOne","passwordTwo","error","SignUpFormBase","possibleConstructorReturn","getPrototypeOf","call","onSubmit","event","_this$state","state","then","authUser","setState","objectSpread","history","push","ROUTES","catch","preventDefault","onChange","defineProperty","target","name","value","_this$state2","isInvalid","type","placeholder","disabled","message","SignUpLink","Link","to","SignUpForm","compose","withRouter","SignUpPage","SignInFormBase","SignInForm","SignInPage","SignUp_SignUpLink","Error","_ref","onClick","href","NavigationAuth","NavLink","SignOut","NavigationNonAuth","Navigation","Navigation_NavigationAuth","Navigation_NavigationNonAuth","PasswordForgotPage","AccountPage","AdminPage","App","_this2","onAuthStateChanged","listener","components_Navigation_Navigation","Switch","Route","path","component","exact","PasswordForgetPage","Boolean","window","location","hostname","match","ReactDOM","render","context","Provider","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"gRAUeA,SARF,WACZ,OACCC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAf,UCMaC,EARD,WACb,OACCJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAf,UCMaE,EARC,WACf,OACCL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAf,mDCFIG,EAAkBC,IAAMC,cAAc,MAE/BC,EAAe,SAAAC,GAAS,OAAI,SAAAC,GAAK,OAC5CX,EAAAC,EAAAC,cAACI,EAAgBM,SAAjB,KACG,SAAAC,GAAQ,OAAIb,EAAAC,EAAAC,cAACQ,EAADI,OAAAC,OAAA,GAAeJ,EAAf,CAAsBE,SAAUA,SAIlCP,2BCRfU,EAAQ,IAAUC,SAElB,IAAMA,EAAS,CACbC,OAAQ,0CACRC,WAAY,4BACZC,YAAa,mCACbC,UAAW,YACXC,cAAe,wBACfC,kBAAmB,gBCPrBC,EDWE,SAAAC,IAAc,IAAAC,EAAAC,KAAAb,OAAAc,EAAA,EAAAd,CAAAa,KAAAF,GAAAE,KAQdE,iCAAmC,SAACC,EAAOC,GAAR,OAAqBL,EAAKM,KAAKC,+BAA+BH,EAAOC,IAR1FJ,KAUdO,6BAA+B,SAACJ,EAAOC,GAAR,OAAqBL,EAAKM,KAAKG,2BAA2BL,EAAOC,IAVlFJ,KAYdS,UAAY,kBAAMV,EAAKM,KAAKK,WAZdV,KAcdW,gBAAkB,SAAAR,GAAK,OAAIJ,EAAKM,KAAKO,uBAAuBT,IAd9CH,KAgBda,iBAAmB,SAAAT,GAAQ,OAAIL,EAAKM,KAAKS,YAAYC,eAAeX,IAflEY,IAAIC,cAAc3B,GAElBU,KAAKK,KAAOW,IAAIX,QEhBPa,EAAO,YAGPC,EAAQ,kBACRC,EAAU,oBCWjBC,EAAgB,CACpBC,SAAU,GACVnB,MAAO,GACPoB,YAAa,GACbC,YAAa,GACbC,MAAO,MAGHC,cACJ,SAAAA,EAAY1C,GAAO,IAAAe,EAAA,OAAAZ,OAAAc,EAAA,EAAAd,CAAAa,KAAA0B,IACjB3B,EAAAZ,OAAAwC,EAAA,EAAAxC,CAAAa,KAAAb,OAAAyC,EAAA,EAAAzC,CAAAuC,GAAAG,KAAA7B,KAAMhB,KAKR8C,SAAW,SAAAC,GAAS,IAAAC,EAEqBjC,EAAKkC,MAA5B9B,GAFE6B,EAEZV,SAFYU,EAEF7B,OAAOoB,EAFLS,EAEKT,YAEvBxB,EAAKf,MAAME,SACRsB,2BAA2BL,EAAOoB,GAClCW,KAAK,SAAAC,GACJpC,EAAKqC,SAALjD,OAAAkD,EAAA,EAAAlD,CAAA,GAAmBkC,IACnBtB,EAAKf,MAAMsD,QAAQC,KAAKC,KAEzBC,MAAM,SAAAhB,GACL1B,EAAKqC,SAAS,CAAEX,YAGtBM,EAAMW,kBApBa3C,EAuBnB4C,SAAW,SAAAZ,GACThC,EAAKqC,SAALjD,OAAAyD,EAAA,EAAAzD,CAAA,GAAgB4C,EAAMc,OAAOC,KAAOf,EAAMc,OAAOE,SArBjDhD,EAAKkC,MAAL9C,OAAAkD,EAAA,EAAAlD,CAAA,GAAkBkC,GAHDtB,wEA2BV,IAAAiD,EAOHhD,KAAKiC,MALPX,EAFK0B,EAEL1B,SACAnB,EAHK6C,EAGL7C,MACAoB,EAJKyB,EAILzB,YACAC,EALKwB,EAKLxB,YACAC,EANKuB,EAMLvB,MAGIwB,EACJ1B,IAAgBC,GACA,KAAhBD,GACU,KAAVpB,GACa,KAAbmB,EAEF,OACEjD,EAAAC,EAAAC,cAAA,QAAMuD,SAAU9B,KAAK8B,UACnBzD,EAAAC,EAAAC,cAAA,SACEuE,KAAK,WACLC,MAAOzB,EACPqB,SAAU3C,KAAK2C,SACfO,KAAK,OACLC,YAAY,cAEd9E,EAAAC,EAAAC,cAAA,SACEuE,KAAK,QACLC,MAAO5C,EACPwC,SAAU3C,KAAK2C,SACfO,KAAK,OACLC,YAAY,kBAEd9E,EAAAC,EAAAC,cAAA,SACEuE,KAAK,cACLC,MAAOxB,EACPoB,SAAU3C,KAAK2C,SACfO,KAAK,WACLC,YAAY,aAEd9E,EAAAC,EAAAC,cAAA,SACEuE,KAAK,cACLC,MAAOvB,EACPmB,SAAU3C,KAAK2C,SACfO,KAAK,WACLC,YAAY,qBAEd9E,EAAAC,EAAAC,cAAA,UAAQ6E,SAAUH,EAAWC,KAAK,UAAlC,WACCzB,GAASpD,EAAAC,EAAAC,cAAA,WAAMkD,EAAM4B,iBA1EDtE,aA+EvBuE,EAAa,kBACjBjF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAf,0BAC2BH,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAMC,GDtGZ,oBCsGM,aAIvBC,EAAaC,YACjBC,IACA7E,EAFiB4E,CAGjBhC,GAEakC,EA3GI,kBACjBvF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAf,WAGDH,EAAAC,EAAAC,cAACkF,EAAD,QCMGpC,EAAgB,CACpBlB,MAAO,GACPC,SAAU,GACVqB,MAAO,MAGHoC,cACJ,SAAAA,EAAY7E,GAAO,IAAAe,EAAA,OAAAZ,OAAAc,EAAA,EAAAd,CAAAa,KAAA6D,IACjB9D,EAAAZ,OAAAwC,EAAA,EAAAxC,CAAAa,KAAAb,OAAAyC,EAAA,EAAAzC,CAAA0E,GAAAhC,KAAA7B,KAAMhB,KAKR8C,SAAW,SAAAC,GAAS,IAAAC,EACUjC,EAAKkC,MAAzB9B,EADU6B,EACV7B,MAAOC,EADG4B,EACH5B,SACfL,EAAKf,MAAME,SACZqB,6BAA6BJ,EAAOC,GACpC8B,KAAK,WACAnC,EAAKqC,SAALjD,OAAAkD,EAAA,EAAAlD,CAAA,GAAmBkC,IACnBtB,EAAKf,MAAMsD,QAAQC,KAAKC,KAEzBC,MAAM,SAAAhB,GACL1B,EAAKqC,SAAS,CAAEX,YAGpBM,EAAMW,kBAlBW3C,EAqBnB4C,SAAW,SAAAZ,GACThC,EAAKqC,SAALjD,OAAAyD,EAAA,EAAAzD,CAAA,GAAiB4C,EAAMc,OAAOC,KAAOf,EAAMc,OAAOE,SAnBlDhD,EAAKkC,MAAL9C,OAAAkD,EAAA,EAAAlD,CAAA,GAAkBkC,GAHDtB,wEAyBV,IAAAiD,EAC4BhD,KAAKiC,MAAhC9B,EADD6C,EACC7C,MAAOC,EADR4C,EACQ5C,SAAUqB,EADlBuB,EACkBvB,MAEnBwB,EAAyB,KAAb7C,GAA6B,KAAVD,EAErC,OACE9B,EAAAC,EAAAC,cAAA,QAAMuD,SAAU9B,KAAK8B,UACnBzD,EAAAC,EAAAC,cAAA,SACEuE,KAAK,QACLC,MAAO5C,EACPwC,SAAU3C,KAAK2C,SACfO,KAAK,OACLC,YAAY,kBAEd9E,EAAAC,EAAAC,cAAA,SACEuE,KAAK,WACLC,MAAO3C,EACPuC,SAAU3C,KAAK2C,SACfO,KAAK,WACLC,YAAY,aAEd9E,EAAAC,EAAAC,cAAA,UAAQ6E,SAAUH,EAAWC,KAAK,UAAlC,WAICzB,GAASpD,EAAAC,EAAAC,cAAA,SAAIkD,EAAM4B,iBAnDCtE,aAyDvB+E,EAAaJ,YACjBC,IACA7E,EAFiB4E,CAGjBG,GAEaE,EA9EI,kBAClB1F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAf,gBAGEH,EAAAC,EAAAC,cAACuF,EAAD,MACAzF,EAAAC,EAAAC,cAACyF,EAAD,QCJWC,EARD,WACb,OACC5F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAf,+BCQaM,IARO,SAAAoF,GAAA,IAAGhF,EAAHgF,EAAGhF,SAAH,OACpBb,EAAAC,EAAAC,cAAA,OAAK4F,QAASjF,EAASuB,WAErBpC,EAAAC,EAAAC,cAAA,KAAG6F,KAAK,KAAR,eCGEC,EAAiB,kBACrBhG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAC+F,EAAA,EAAD,CAASd,GAAIhB,GAAb,QACAnE,EAAAC,EAAAC,cAAC+F,EAAA,EAAD,CAASd,GAAIhB,GAAb,SACAnE,EAAAC,EAAAC,cAAC+F,EAAA,EAAD,CAASd,GAAIhB,GAAb,WAEAnE,EAAAC,EAAAC,cAACgG,EAAD,QAIEC,EAAoB,kBACxBnG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAC+F,EAAA,EAAD,CAASd,GAAIhB,GAAb,QACAnE,EAAAC,EAAAC,cAAC+F,EAAA,EAAD,CAASd,GAAIhB,GAAb,SACAnE,EAAAC,EAAAC,cAAC+F,EAAA,EAAD,CAASd,GAAIhB,GAAb,WACAnE,EAAAC,EAAAC,cAAC+F,EAAA,EAAD,CAASd,GLvBU,oBKuBnB,aAKWiB,EAxBI,SAAAP,GAAA,IAAG/B,EAAH+B,EAAG/B,SAAH,OACjB9D,EAAAC,EAAAC,cAAA,WAAM4D,EAAW9D,EAAAC,EAAAC,cAACmG,EAAD,MAAqBrG,EAAAC,EAAAC,cAACoG,EAAD,QCGzBC,EARY,WAC1B,OACCvG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAf,yBCMaqG,EARK,WACnB,OACCxG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAf,iBCMasG,EARG,WACjB,OACCzG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAf,eCuDaM,gBAxCd,SAAAiG,EAAY/F,GAAO,IAAAe,EAAA,OAAAZ,OAAAc,EAAA,EAAAd,CAAAa,KAAA+E,IAClBhF,EAAAZ,OAAAwC,EAAA,EAAAxC,CAAAa,KAAAb,OAAAyC,EAAA,EAAAzC,CAAA4F,GAAAlD,KAAA7B,KAAMhB,KAEDiD,MAAQ,CACZE,SAAU,MAJOpC,mFAQA,IAAAiF,EAAAhF,KAClBA,KAAKhB,MAAME,SAASmB,KAAK4E,mBAAmB,SAAA9C,GAC3CA,EACG6C,EAAK5C,SAAS,CAAED,aAChB6C,EAAK5C,SAAS,CAAED,SAAU,wDAK9BnC,KAAKkF,4CAIL,OACC7G,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAC4G,EAAD,CAAYhD,SAAUnC,KAAKiC,MAAME,WACjC9D,EAAAC,EAAAC,cAAC6G,EAAA,EAAD,KACC/G,EAAAC,EAAAC,cAAC8G,EAAA,EAAD,CAAOC,KAAM9C,EAAa+C,UAAWnH,EAAMoH,OAAK,IAChDnH,EAAAC,EAAAC,cAAC8G,EAAA,EAAD,CAAOC,KAAM9C,EAAc+C,UAAW9G,IACtCJ,EAAAC,EAAAC,cAAC8G,EAAA,EAAD,CAAOC,KAAM9C,EAAgB+C,UAAW7G,IACxCL,EAAAC,EAAAC,cAAC8G,EAAA,EAAD,CAAOC,KT7CW,mBS6CWC,UAAWxB,IACxC1F,EAAAC,EAAAC,cAAC8G,EAAA,EAAD,CAAOC,KT7CW,mBS6CWC,UAAW3B,IACxCvF,EAAAC,EAAAC,cAAC8G,EAAA,EAAD,CAAOC,KT1CmB,sBS0CWC,UAAWE,IAChDpH,EAAAC,EAAAC,cAAC8G,EAAA,EAAD,CAAOC,KT5CW,oBS4CWC,UAAWV,IACxCxG,EAAAC,EAAAC,cAAC8G,EAAA,EAAD,CAAOC,KT3CS,kBS2CWC,UAAWT,IACtCzG,EAAAC,EAAAC,cAAC8G,EAAA,EAAD,CAAOE,UAAWtB,aAlCLlF,cCNE2G,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,uECVNC,IAASC,OACP3H,EAAAC,EAAAC,cAAC0H,EAAgBC,SAAjB,CAA0BnD,MAAO,IAAIjD,GACnCzB,EAAAC,EAAAC,cAAC4H,EAAA,EAAD,KACE9H,EAAAC,EAAAC,cAAC6H,EAAD,QAGFC,SAASC,eAAe,SDmHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMvE,KAAK,SAAAwE,GACjCA,EAAaC","file":"static/js/main.086b082f.chunk.js","sourcesContent":["import React from 'react';\n\nconst Home = () => {\n\treturn(\n\t\t<div className=\"App\">\n\t\t\tHome\n\t\t</div>\n\t);\n}\n\nexport default Home;","import React from 'react';\n\nconst About = () => {\n\treturn(\n\t\t<div className=\"App\">\n\t\t\tAbout\n\t\t</div>\n\t);\n}\n\nexport default About;","import React from 'react';\n\nconst Contact = () => {\n\treturn(\n\t\t<div className=\"App\">\n\t\t\tContact\n\t\t</div>\n\t);\n}\n\nexport default Contact;","import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport const withFirebase = Component => props => (\n  <FirebaseContext.Consumer>\n    {firebase => <Component {...props} firebase={firebase} />}\n  </FirebaseContext.Consumer>\n);\n\nexport default FirebaseContext;","import app from 'firebase/app';\nimport 'firebase/auth';\nrequire('dotenv').config()\n\nconst config = {\n  apiKey: \"AIzaSyCcNXC25DjJcI9l7iKvIK0183VAWNxu9Ag\",\n  authDomain: \"kovepages.firebaseapp.com\",\n  databaseURL: \"https://kovepages.firebaseio.com\",\n  projectId: \"kovepages\",\n  storageBucket: \"kovepages.appspot.com\",\n  messagingSenderId: \"559337801228\"\n};\n\nclass Firebase {\n  constructor() {\n    app.initializeApp(config);\n\n    this.auth = app.auth();\n  }\n\n  // *** Auth Api ***\n\n  doCreateUserWithEmailAndPassword = (email, password) => this.auth.createUserWithEmailAndPassword(email, password);\n  \n  doSignInWithEmailAndPassword = (email, password) => this.auth.signInWithEmailAndPassword(email, password);\n  \n  doSignOut = () => this.auth.signOut();\n\n  doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\n\n  doPasswordUpdate = password => this.auth.currentUser.updatePassword(password);\n}\n\nexport default Firebase;","import FirebaseContext, { withFirebase } from './context';\nimport Firebase from './firebase';\n\nexport default Firebase;\n\nexport { FirebaseContext, withFirebase };","export const LANDING = '/kovedev/';\nexport const HOME = '/kovedev/';\nexport const SIGN_IN = '/kovedev/signin/';\nexport const SIGN_UP = '/kovedev/signup/';\nexport const ABOUT = '/kovedev/about/';\nexport const CONTACT = '/kovedev/contact/';\nexport const ACCOUNT = '/kovedev/account/';\nexport const PASSWORD_FORGET = '/kovedev/pw-forgot/';\nexport const ADMIN = '/kovedev/admin/';","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst SignUpPage = () => (\n  <div className=\"App\">\n    <div className=\"PageName\">\n\t\t\tSign Up\n\t\t</div>\n\t\t\t<SignUpForm />\n  </div>\n);\n\nconst INITIAL_STATE = {\n  username: '',\n  email: '',\n  passwordOne: '',\n  passwordTwo: '',\n  error: null,\n};\n\nclass SignUpFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  };\n\n  onSubmit = event => {\n\t\t// eslint-disable-next-line\n\t\tconst { username, email, passwordOne } = this.state;\n\n    this.props.firebase\n      .signInWithEmailAndPassword(email, passwordOne)\n      .then(authUser => {\n        this.setState({ ...INITIAL_STATE });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n\t\tevent.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({[event.target.name]: event.target.value});\n  };\n\n  render() {\n    const {\n      username,\n      email,\n      passwordOne,\n      passwordTwo,\n      error,\n    } = this.state;\n\n    const isInvalid = \n      passwordOne !== passwordTwo || \n      passwordOne === '' ||\n      email === '' ||\n      username === '';\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"username\"\n          value={username}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Full Name\"\n        />\n        <input\n          name=\"email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Email Address\"\n        />\n        <input\n          name=\"passwordOne\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Password\"\n        />\n        <input\n          name=\"passwordTwo\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Confirm Password\"\n        />\n        <button disabled={isInvalid} type=\"submit\">Sign Up</button>\n        {error && <div>{error.message}</div>}\n      </form>\n    );\n  }\n}\nconst SignUpLink = () => (\n  <div className=\"SignUpLink\">\n      Don't gave an account? <Link to={ROUTES.SIGN_UP}>Sign Up</Link>\n  </div>\n);\n\nconst SignUpForm = compose(\n  withRouter,\n  withFirebase,\n)(SignUpFormBase);\n\nexport default SignUpPage;\n\nexport { SignUpForm, SignUpLink };","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport { SignUpLink } from '../SignUp/SignUp';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst SignInPage = () => (\n\t<div className=\"App\">\n\t\t<div className=\"PageName\">\n\t\t\tSign in Page\n\t\t</div>\n    <SignInForm />\n    <SignUpLink />\n  </div>\n);\n\nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n  error: null,\n};\n\nclass SignInFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { email, password } = this.state;\n    this.props.firebase\n\t\t.doSignInWithEmailAndPassword(email, password)\n\t\t.then(() => {\n        this.setState({ ...INITIAL_STATE });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { email, password, error } = this.state;\n\n    const isInvalid = password === '' || email === '';\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Email Address\"\n        />\n        <input\n          name=\"password\"\n          value={password}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Password\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Sign In\n        </button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nconst SignInForm = compose(\n  withRouter,\n  withFirebase,\n)(SignInFormBase);\n\nexport default SignInPage;\n\nexport { SignInForm };","import React from 'react';\n\nconst Error = () => {\n\treturn(\n\t\t<div className=\"App\">\n\t\t\t404 page not found\n\t\t</div>\n\t);\n}\n\nexport default Error;","import React from 'react';\n\nimport { withFirebase } from '../Firebase';\n\nconst SignOutButton = ({ firebase }) => (\n  <div onClick={firebase.doSignOut}>\n    {// eslint-disable-next-line\n    <a href=\"#\">Sign out</a>\n    }\n  </div>\n);\n\nexport default withFirebase(SignOutButton);","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport SignOutButton from '../SignOut';\nimport * as ROUTES from '../../constants/routes';\n\nconst Navigation = ({ authUser }) => (\n  <div>{authUser ? <NavigationAuth /> : <NavigationNonAuth />}</div>\n);\n\nconst NavigationAuth = () => (\n  <div className=\"NavBar\">\n    <NavLink to={ROUTES.HOME}>Home</NavLink>\n    <NavLink to={ROUTES.ABOUT}>About</NavLink>\n    <NavLink to={ROUTES.CONTACT}>Contact</NavLink>\n    {/* <NavLink to={ROUTES.ADMIN}>Admin</NavLink> */}\n    <SignOutButton />\n  </div>\n);\n\nconst NavigationNonAuth = () => (\n  <div className=\"NavBar\">\n    <NavLink to={ROUTES.HOME}>Home</NavLink>\n    <NavLink to={ROUTES.ABOUT}>About</NavLink>\n    <NavLink to={ROUTES.CONTACT}>Contact</NavLink>\n    <NavLink to={ROUTES.SIGN_IN}>Sign in</NavLink>\n    {/* <NavLink to={ROUTES.ADMIN}>Admin</NavLink> */}\n  </div>\n);\n\nexport default Navigation;","import React from 'react';\n\nconst PasswordForgotPage = () => {\n\treturn(\n\t\t<div className=\"App\">\n\t\t\tPassword forgot page\n\t\t</div>\n\t);\n}\n\nexport default PasswordForgotPage;","import React from 'react';\n\nconst AccountPage = () => {\n\treturn(\n\t\t<div className=\"App\">\n\t\t\tAccount page\n\t\t</div>\n\t);\n}\n\nexport default AccountPage;","import React from 'react';\n\nconst AdminPage = () => {\n\treturn(\n\t\t<div className=\"App\">\n\t\t\tAdmin Page\n\t\t</div>\n\t);\n}\n\nexport default AdminPage;","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport './App.scss';\n\nimport Home from './components/Home/Home';\nimport About from './components/About/About';\nimport Contact from './components/Contact/Contact';\nimport SignInPage from './components/SignIn/SignIn';\nimport Error from './components/Error/Error';\nimport Navigation from './components/Navigation/Navigation';\nimport SignUpPage from './components/SignUp/SignUp';\nimport PasswordForgetPage from './components/PasswordForget/PasswordForgot';\nimport AccountPage from './components/Account/Account';\nimport AdminPage from './components/Admin/Admin';\n\nimport * as ROUTES from './constants/routes';\nimport { withFirebase } from './components/Firebase';\n\nclass App extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tauthUser: null,\n\t\t}\n\t}\n\n\tcomponentDidMount(){\n\t\tthis.props.firebase.auth.onAuthStateChanged(authUser => {\n\t\t\tauthUser\n\t\t\t\t? this.setState({ authUser })\n\t\t\t\t: this.setState({ authUser: null });\n\t\t});\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis.listener();\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Navigation authUser={this.state.authUser} />\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route path={ROUTES.HOME} component={Home} exact/>\n\t\t\t\t\t<Route path={ROUTES.ABOUT} component={About} />\n\t\t\t\t\t<Route path={ROUTES.CONTACT} component={Contact} />\n\t\t\t\t\t<Route path={ROUTES.SIGN_IN} component={SignInPage} />\n\t\t\t\t\t<Route path={ROUTES.SIGN_UP} component={SignUpPage} />\n\t\t\t\t\t<Route path={ROUTES.PASSWORD_FORGET} component={PasswordForgetPage} />\n\t\t\t\t\t<Route path={ROUTES.ACCOUNT} component={AccountPage} />\n\t\t\t\t\t<Route path={ROUTES.ADMIN} component={AdminPage} />\n\t\t\t\t\t<Route component={Error}/>\n\t\t\t\t</Switch>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default withFirebase(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport Firebase, { FirebaseContext } from './components/Firebase';\n\nReactDOM.render(\n  <FirebaseContext.Provider value={new Firebase()}>\n    <BrowserRouter>\n      <App/>\n    </BrowserRouter>\n  </FirebaseContext.Provider>\n  , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}